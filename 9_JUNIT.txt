===================================================================================================================================================
===================================================================================================================================================
===================================================================================================================================================
                                                    !!! Shree Swami Samarth !!!
===================================================================================================================================================
===================================================================================================================================================
===================================================================================================================================================

--------------------------------------------------------------------------------------------------------------------------------------------------------------
1)  What is Junit?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
   Junit is open source framework for writing test cases in java. It is combination of java and unit testing.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
2) What is latest version of junit?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
     Junit 5
--------------------------------------------------------------------------------------------------------------------------------------------------------------
3) What is Unit Test?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
    unit testing  means first level of testing it's done by developer.
    unit testing means check or ensure that the specific function is working as they designed.
    or we can say that it is combination of input data and expected output.

    Types of unit testing
    1) Manual Testing  - Manual Testing means execute test cases manually without any tool support. It is time consuming and less realiable.
    2) Automated Testing - Automated Testing means exceute test cases by tool support.It is fast and more reliable.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
4) What is the advatanges of Unit Testing?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
   1) Improve product quality
   2) Fast performance 
   3) easy way to use API
   4) easy way to assert the result.
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
4) Annotations
--------------------------------------------------------------------------------------------------------------------------------------------------------------
   1) @Test - @Test annotations marks the method is test method.
   2) @BeforeClass - it called only once before starting all the methods.
   3) @AfterClass - it called only once after finising all the tests.
   4) @Before- It called before the  each test.
   5) @After -It called after each test.


   BeforeClass,Before ---> used to perform the initilization tasks.
   AfterClass,After      ----> Uset to perform the cleanup tasks for tests.


---------------------------------------------------------------------------------------------------------------------------------------
4) What are the annotations provided by Junit 4?
---------------------------------------------------------------------------------------------------------------------------------------
 1)@Test - @Test annotations is used mark the test method.
 2)@Before (setup and teardown method) - execute before each method i.e setup
 3)@BeforeClass - execute only once before all test method.
 4)@After - after means execute after each method. i.e teardown
 5)@AfterClass - execute only once after all test methods.
 6)@Igone - annotations used when you don't want to execute that method.
 7)@RunWith - @RunWith annotations is used to configure spring runner class.

{*** Junit4 method doesn't follow any naming convetion)


---------------------------------------------------------------------------------------------------------------------------------------
4) What are the required dependencies to migrate your project Junit4 project into Junit5?
---------------------------------------------------------------------------------------------------------------------------------------
1) Junit Jupiter engine
2) Junit Vintage // It works same as Junit4 if you add this

Sometimes you are not able see Runas Junit options then you need to add the dependencies
such as
1) Junit Platform
2) Junit Jupiter API

and Test case write @RunWith(JunitPlatform.class)
click on properties 
click on add



---------------------------------------------------------------------------------------------------------------------------------------
5) What is the use of assert class?
---------------------------------------------------------------------------------------------------------------------------------------
 1) Assert class provide method to test your test cases.
  
 A) assertEqual - check two values equal or not.
 B) assertNotNll- check the object is not null
 C) assertTrue-check condition is true
 D) assertFalse- check condition is False
 E) assertThat 
 F) assertSame -check the reference of two objects
 G) 
 

---------------------------------------------------------------------------------------------------------------------------------------
6) Changes of annotations in Junit5 as compare to Junit4?
---------------------------------------------------------------------------------------------------------------------------------------
1)@Before to @BeforeEach
2)@After to @AfterEach

---------------------------------------------------------------------------------------------------------------------------------------
7) What is difference between Junit 4 and Junit 5?
---------------------------------------------------------------------------------------------------------------------------------------
1) Junit 4 doesn't support java 1.8 features whereas Junit 5 support 1.8 features.
2) In Junit4 we have @Before and @After annotations now it becomes changes as @BeforeEach and @AfterEach
3) If you want to use Junit4 then you need to add Junit4 library whereas if you want to use Junit5
   then you need to add the dependencies.	

--------------------------------------------------------------------------------------------------------------------------------------
5) Assert Class
--------------------------------------------------------------------------------------------------------------------------------------
   1) assertEqual - check the two objects equal or not.It is overloaded.
   2) assertTrue- check condition is true.
   3) assertFalse-check condition is false. 
   4) assertNull- check object is null.
   5) assertNotNull-check object is not null
   6) assertEquals -check two object equal or not
   7)@SpringBootTest
   8)@RunWith(SpringRunner.class)

--------------------------------------------------------------------------------------------------------------------------------------------------------------
6) What is Mockito?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
    Mockito is open source framework used to mock the test data.
    Mockito is framework is used write unit testing in java.
    Mockito provides Mocking api.

   Required Dependencies 
 1)Junit Junpiter
 2) Mockito-Junit-Jupiter


--------------------------------------------------------------------------------------------------------------------------------------------------------------
7) What are the annotations of Mockito?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
1)@ExtendsWith(MockitoExtension.class) Provide mock object for you
2)@Mock annotations is used to mock the objects
3)@InjectMock - used to create the instance and inject all necessary mocks

--------------------------------------------------------------------------------------------------------------------------------------------------------------
8) What is advantages of mockito?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 1) It support exception.
 2) No need to write mock object manually.

-------------------------------------------------------------------------------------------------------------------------------------------------------------
9) What is limitations of Mockito?
-------------------------------------------------------------------------------------------------------------------------------------------------------------- 
We can't mock out the cases such as
1) Constructor
2) Final
3) Private
4) Static
5) Enum


--------------------------------------------------------------------------------------------------------------------------------------------------------------
10) What is Testing?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
    Testing means check the functionality of application wheather fulfill the requirements or not.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
11) What is Junit?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
   Junit is combination of java_unit testing. It is open source platform to write test cases in java.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
12) What is unit Testing?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
   Unit Testing means first level of testing. It is combination of input data and expected output.
   Unit Testing means check or ensure that the specific function works as they designed.   

--------------------------------------------------------------------------------------------------------------------------------------------------------------
10) What is the difference between manual testing and automated testing?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
   Manual testing means execute test case manually, without any tool support. It is time consuming and less realiable.
   Automation Testing means execute test cases automatically ie. by using tool support. It is more reliable and fast process.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
11) What is the disadvantages of manual testing?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
    1) Manual testing is time consuming.
    2) Less reliable.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
12) What is advantages of Automation Testing?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
   1) Automation Testing performs is very fast.
   2) It is more reliable
   
--------------------------------------------------------------------------------------------------------------------------------------------------------------
13) Is it necessary to write test cases for every logic?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
   No, it is not necessary to write test cases for every logic. We can write only those thing broke by any reason.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
14) What are the useful Junit extension?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  1) cactus
  2) XMLUnit
  3) MockObject

--------------------------------------------------------------------------------------------------------------------------------------------------------------
15) What are the feature of Junit?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  1) Junit is open source framework for writing test cases in java.
  2) It support the annotations.
  3) It support the test runner.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
16) How is the testing of protected method is done?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  1) Testing of protected method is done withing the same package as the target class.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
17) How is the testing of private method is done?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 There is no direct way to test private method. so we need to execute it manually.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
18) If the Junit method return type is String then what will happen?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  Junit provide method return type is void. If you provide the method return type is string then the test
  executiong will get fail.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
19) Is the use of main method possible for unit testing?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  Yes
--------------------------------------------------------------------------------------------------------------------------------------------------------------
20) Is it necessary to write test cases for every class?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 No, we can write only the logic will break for any reason.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
21) What is XMLunit provide?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 1) XMLUnit provide XMLTest case and set of supporting classes.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
22) List of core component of cactus?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 1) Cactus framework
 2) Cactus integration module.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
23) What are the method in fixture?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 1) setup
 2) teardown
--------------------------------------------------------------------------------------------------------------------------------------------------------------
24) What is the unit Test case?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unit test case means first level of testing. It is combinations of input data and expected outputs.
 Unit testing means check or ensure that the specific function works as they designed.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
25) What is the use of @Test annotations?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  @Test annotations marks the method is test method.

26) What is test suit?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  Test suit means allow to execute group of multiple test cases.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
27) What does test runner ?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Test runner is used to execute the test cases.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
28) What are the important Junit annotations?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 1) @Test - marks the test method
 2) @BeforeAll- execute only once before staring all methods.
 3) @Before- execute before the each test.
 4) @After - execute after each test.
 5) @AfterAll- execute only once after the all method.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
29) What does Assert class?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Assert class provide method to test the test cases.
 1) assertEquals
 2) assertNotNull
 3) assertThat
 4)assertTrue
 5)assertFalse

--------------------------------------------------------------------------------------------------------------------------------------------------------------
30)  While Unit Testing we test private method of class only?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 No, We test only public method of class.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
31)  While unit testing we test our application end to end?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 No.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
32) Does Junit prodivde mocking API?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 No, Junit doesn't provide mocking API.
 Mockito provide mocking API.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
33) Which annotations is used to setup data for each test method in Junit4?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 @Before annotations is used to setup data before each test method.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
34) Which Assertion can we use to compare and see if the excpected and actual values  are equal?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  AssertEqual method is used to check or compare two values equal or not.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
35) What is the name of default Junit test runner?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  BlockJunit4Runner.class

--------------------------------------------------------------------------------------------------------------------------------------------------------------
36) How to generate test cases for that case name default way?
---------------------------------------------------------------------------------- ----------------------------------------------------------------------------
 Just write click on your application or specific class . 
 select new option
 select JunitTestCases
 please check package

--------------------------------------------------------------------------------------------------------------------------------------------------------------
37)  Which annotations should be mark to each test method?
--------------------------------------------------------------------------------------------------------------------------------------------------------------   
 @Test annotations is used to mark method as test method.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
38) Is it correct we use @Excepted annotations for assert an exception?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
No we use expected attribute to assert an exception,

--------------------------------------------------------------------------------------------------------------------------------------------------------------
39) What is maven ? and If i want to execute all test cases in how can you do that?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
  Maven is powerful project management tool. It helps to build maven project.

  1) If you want to run all your test 
  A) click on maven clean
  B) maven install

--------------------------------------------------------------------------------------------------------------------------------------------------------------
40) What exactly happens if we run your application as maven clean?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 If you run your application as maven clean then target folder get clear.
 (Whatever files generated inside the target folder it will get clear)

--------------------------------------------------------------------------------------------------------------------------------------------------------------
41) What is the difference between @Mock and @MockBean annotations?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
@Mock annotations is used to create the mock objects.
@Mockbean annotations is used to create mock to application context.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
42) What is the first step of mocking ?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
1) stubbing and setting the exceptions

--------------------------------------------------------------------------------------------------------------------------------------------------------------
43) The assumtions of mocking is that each unit is tested in?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Isolations

--------------------------------------------------------------------------------------------------------------------------------------------------------------
44) Junit 4
--------------------------------------------------------------------------------------------------------------------------------------------------------------
1) We need to add library of Junit4
2) Positive Tests cases
3) Negative Tests cases
4) Exception Scenario ( excepted attribute we need to use for that)
5) @Before , @After

--------------------------------------------------------------------------------------------------------------------------------------------------------------
45) Junit 5
--------------------------------------------------------------------------------------------------------------------------------------------------------------
1) @Positive Test Case Scenario
2) @Negative Test Cases Scenario
3) Exception Scenario (doThrow and assertThrow)

--------------------------------------------------------------------------------------------------------------------------------------------------------------
46) What is coverage?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Coverage shows number of lines are tested when your unit test cases run against the source code.
 We can use EclipseEmma or JTest tool.
 We need to EclipseEmma plugins from eclipse martketplce.
 Whatever lines we see in green colour means they tested or write good way otherwise we see red colour
 that means they not good. Normally we need to maintain 80 to 90 %. code coverage
 Once we add the plugin we will see run as coverage .

 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
47) What is AGILE FIRST principle?	
-------------------------------------------------------------------------------------------------------------------------------------------------------------- 
F stands for fast - execute test cases fastly
I stands for independent - execute test cases independetly
R stands for  repatable - we should repeat and execute test across the enviroments.
S stands for self validating - result get faster either true or false
T- stands for timely - always write test case before the production code.


--------------------------------------------------------------------------------------------------------------------------------------------------------------
48) What is the purpose of verify() method?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
It check the method is called or not.
For void method testing we use verify() method.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
49) @RunWIth annotations use?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
@RunWith annotations is used to change default runner.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
50) If i want to do test of static method how can you do by using mockito?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
We need to use powermock
1) also change the default runner into @Runwith annotations
2) @PrepareForTest(staticMethodclassName.class)

--------------------------------------------------------------------------------------------------------------------------------------------------------------
51) If you are getting error at the time of MockitoExtension so please add this two dependecny
--------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Mockito Core
2) Mockito JUnit Jupiter

--------------------------------------------------------------------------------------------------------------------------------------------------------------
52) Need to check not comform 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Junit5
if you are using junit5 use or import @Test,@BeforeEach annotations from jupiter package.

2) Junit4
if you are using junit4 import it into normal package.


53) How to check overall code coverage?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Run your holes application as junit with coverage.
For coverage you have to add jacoco maven plugin in your IDE.
Click on coverage ---> select all service -----> right click ----->Export session ---> finish ---> open index page

54) What is purpose of ReflectionTestUtil()?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
With the help of ReflectionTestUtil we injecting instane. 
for ex --> in your class a instance shows null , then you need to create
or mock or injectmock instace in your test class.
And ReflectionTestUtil.SetFiled(clasNameWhereNameValuePresent,"NullInstance",CreateNewInstanceWhichWantToInject);

In this way you can replace or inject the instance.


55) @InjectMock
--------------------------------------------------------------------------------------------------------------------------------------------------------------
@InjectMock actually create an instance of class.
If you want to another class method you required inject Mock.
We never used InjectMock on top of interface.

56)@Mock
--------------------------------------------------------------------------------------------------------------------------------------------------------------
If you want to mock object, dont' want to do actual call to that method.
THat time we use @Mock.

57) @ExtendWith
--------------------------------------------------------------------------------------------------------------------------------------------------------------
@ExtendWith allows us to create an instance.





1) custom arraylist --> How to define,
2) how to select employee name,city by using stream api.
3) initailize array ---> data of array or how it works
4)  array {2,3,5,6} fixed now it want make it double how can we do that.
5) 


