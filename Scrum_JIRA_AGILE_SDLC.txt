=======================================================================================================================================================================
=======================================================================================================================================================================
                                                                 !!! Shree Swami Samarth !!!
=======================================================================================================================================================================
=======================================================================================================================================================================

1) Scrum
=======================================================================================================================================================================
                                           1) Scrum
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                            Scrum framework is used to devlop and sustain complex product.

                                           2) Sprint
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                            Sprint is short time peroid taken by scrum team to complete set amount of work within 2,4,weeks.

                                           3) Scrum methodology
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                           A) Spring backlog-
     
                                           Spring backlog means contains list of requirments and feature functionlity.
                                           Inside the backlog we have user stories.

                                           B) Spring planning-

                                           Spring planning means choose set amount work that can complete within short time peroid i.e 2,4 weeks.

                                           C) Daily scrum-

                                           Daily scrum arranged by scrum master. In this meeting whole team find out the answer of follwing questions such as
                                           1) what was done yesterday?
                                           2) What is plan for today?
                                           3) Is there any abstacle to complete your work?
                                           
                                           
             

                                           D) Sprint review-

                                           Present model in front of product owner.i.e - demo

                                           E) Sprint retrospect-
                                            Agrees and continuos work on the process of implementations.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 

=======================================================================================================================================================================
2) JIRA
=======================================================================================================================================================================
1) JIRA
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   JIRA is powerful project management tool used for issue and bugs tracking system.
   JIRA is developed by australian company atalansian.
   JIRA is platform indepedent ie. you can use it on os also.
   JIRA  tool is also known multilanguage tool because it available on english,french,germany,japnese or etc languages.
   JIRA provide free license for academic proejct whereas 15 days trial version for indual or personal use.
   JIRA project is also known as collection of issues.
   It maily focus on the three things such as
   1) Project
   2) Issue
   3) Workflow

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
2) Epic-

   Epic means larger proejct requirements,and that can divide into small small parts called as stories.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
3) Story-

   Story means smaller project requirements that written in perspective end of user.
   Stories further more break into development task or testing tasks. 

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

4)Create ---  A) Epic - purpole colour ( battery charging symbol)
              B) story - green colour
              c) Bug - red colour
              d) Task - blue colour
              
              ------------------------------------------------------------------------------
              
              RoadMap - means planning large piece of information into epic level.
              
              Whenever we create anything it will first goes to the backlog.
              backlog means list of requirement or feature functionlity
     
              first create the epic.
     
              Now click on create sprint.
              drag the backlog and drop out in spring section.
               
               
              Backlog click on start sprint then only you can the spring on your board.
              
              Now first it in ToDo coloumn now if you want to start your work then click on
              inprogress in backlog Now in board you can see that task goes into
              InProgress column.
              Once your work is complete then click on DOne.
              so board your task goes into third column i.e Done.
              and Jira number come with underline on it.
              
              Now on backlog click on the complete sprint then the sprint will get remove.
              
              --------------------------------------------------------------------------------
               
              Board
              Under the board we can see the ToDo,InProgressIssues,Done
              
              In Greeen colour for e.g- ProjectName-Number is the number of your
              jira tasks.
              
              If you are going to start your work first change the ToDO into
              Inprogress status.
              
              Board - Now on borad we can we the issue goes into next column i.e from ToDo to InProgress
              
              Once you complete the task click on done
              The Jira tickit name come with underscore on it.
              
              after that you can check on board your work will get complete.
              
              Once every sprint is complete then click on complete sprint options.
              
              If anyone is remaining it will shows us not able to complete sprint.
              
              
              
1) Yesterday, i worked on .........{developing initial spaces.}              
2) Today,I will complete that remaining work.
3) Right now every thing is good.



1) I am currently working on x,y,z story.
2) 





              





=======================================================================================================================================================================
3) Agile
=======================================================================================================================================================================

Agile
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Agile is methodology or actaual software development in industry by using short iterations i.e 2 to 4 weeks.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


=======================================================================================================================================================================
4) SDLC
=======================================================================================================================================================================

Software development life cycle
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 Every application is makes by using and following by sdlc steps.

 1) Analysis of requirements
 2) defining
 3) desiging
 4) coding
 5) testing
 6) deployment
 7) maintaince

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


=======================================================================================================================================================================
4) Waterfall
=======================================================================================================================================================================
  
Waterfall -
 
 Waterfall means put all functionlity into single process. After done with the complete process or model we will put it in front of product owner.
 In Waterfall we don't move forward until finish the current work or model.
 But in agile we can work parallely.


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------




=======================================================================================================================================================================
5) GIT and GITHUB
=======================================================================================================================================================================

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) What is Git?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Git is open source distrubuted version control sysytem it handel small as well as large project with speed and efficieny.
 
 .git folder provide required version to the client if you have like v1,v2 .
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
2) What is GitHub?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Github hold source of your project on different language.Afetring registering on github we can use it free,we can upload
application or project on which. so anyone can access it use it and contact you for the feedback. so basically on github 
we can connect all over world developers.                                                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
3) How to create new Repository?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Just click on new Repository. write the name of new repository
2) make public ,private as you want. and click on create.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
4) Steps to push code on github?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Git  init -- make the folder as git repository.
2) Git status
3) Git add .
4)Git commit -m "first commit"
5) git remote add origin gitrepository_link
6) git push -u origin main/master
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

5) ON GitHub we can upload a file size is 50mb 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   If you want to upload large file then go for gitlab
   
6) Upload large file on github or github desktop
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  A) Open Gitdesktop
  B) Create git repository on github
  C) Create folder 
  D) Clone reposiotory ---> Select the repository and folder
  E) Paste Application on git
  F) Write down summary
  G) commit
  
 7) What is the main purpose of branching ?
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   To work parallely on the application we required branching.
   
   also we don't want to change the already deployed code on production environment.
   
 8) Why we need to merge the branches?
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    To work parallel as well as suppose once i solve the issue or develop feature test it then
    supppose you want to merge it into original branch
    
 9) How to create new branch and why it is required and how to merge it?
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) First clone all your code. git clone
2) Import it into your IDE.
3) Create a new branch on git( git is open source distrubuted version control system.) Distributed version control system means we track our changes in code as per the
                               time.
                               
    git branch branch_name
4) Git log ( check the changes in file)
5) git branch ( check how many branches on your git)
6) git checkout branch_name ( start working on this new Branch)
5) git status 
5) git add.
6) git commit -m "first_commit"
7) git merge branch_name


10) What is difference between pull and fetch?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 git fetch means fetch the changes into your local repository.
 Where as git pull is combination of git fetch+git merge. I.e fetch
 changes into your working directory.
 

11) What is mean by version control system?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Version control system means track changes mades in code as per the times.

12) Can we work more than one developer on same repository?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Yes we can work more than one developer on same repository.

13) If two developer working on same repo and first one commit is changes and now second developer going to commit their chnages then what
will happen?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
If one developer commit their changes and now second developer going to commit their changes they getting error like the file has 
been already changed in remote repository.

To prevent this type of problem or conflict we need to work on isolated branches.
so git merge commond combine the branches and resolve the conflicting edits.

14) How to check what are the different branches present in the repository?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
git branch -a

by using this commond we can check how many branches present in the repository.

15) How to clone the code?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) git clone repository
2) cd foldername
3) git branch branch_name(which you have all the code) { you can check the tree flow }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

16) How to delete a specific class form github?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
git rm target/classes/test/java/NewTest$1.class


17) How to change previous comment in git?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
git revert commitId

A edit mode will get open ------> ESP + I ---> "change your commit" ---> ctrl+c ---> ESC+:wq!

But the class will get delete how we need to check.



18) How to chage branch name?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


19) How to take back commited clases or staging area to working area?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


20) What is the difference between git soft and git hard commond?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


21) How to replace modified class as back or previous version?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------



22) How to stash multiple classes?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
git stash list file1 file2

23) How to stash one class?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
git stash file1

24) How to unstash the files?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
git stash pop

25) How to remove file from staging area to working area?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
git reset HEAD -- Filepath

30) Staged all commit message or staged changes revert back to working area? 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
git reset origin


6)Swagger 
=======================================================================================================================================================================
Swagger is used to build and consume the restful api resources.
so client get exact information like to to consume that api.

We need to add open api maven depedency for that ans use the url
for eg http://localhost:8080/swagger-ui/index.html


7) Sonar qube 
=======================================================================================================================================================================
Sonar qube is open source testing tool. It helps to solve the
issue as soon as they appear.
Sonar qube helps to write clean and secure code.
On sonar qube we can see the bugs, vunerlability, code smells,
code coverage, duplicate lines.

default port number is 9000
first we need to run startsonar
TO use the sonar qube we need add
plugin
1) jacaco maven plugin
2) sonar maven plugin

1) first run your application as maven build
clean org.jacoco:jacoco-maven-plugin:prepare-agent install 

genrate the token on sonar qube

2) then run your application as maven install

sonar:sonar -Dsonar.login=2e617cf34ac2531ea92e7aeb73f395a7f12be229


8) GITLAB
=======================================================================================================================================================================

1) What is Git?
----------------------------------------------------------------------------------------
Git is version controller system. It manage all the version 3.It allows to track changes made in your application.

2) What is Github?
----------------------------------------------------------------------------------------
Github hold source code of your application into different languages.
Once you register on github you can upload your application on it.
So other can access it use it, and connect with you for feedback.
so basically on github we can connect with all over world developers.

3) What is git stash?
----------------------------------------------------------------------------------------
Git stash allows to  switch the branch without commiting the current branch.

git stash filename

git pop filename (to come back)



4) WHat is HEAD?
----------------------------------------------------------------------------------------
HEAD represent last commit in the current checkout branch.

5) How to generate SSH key?
----------------------------------------------------------------------------------------
SSH stands for secured shell.
Basically it used for authentication.
I.e we can connect with gitlab server without
writing username and password each time.

1) Open gitbash
2) ssh-keygen
3) then enter
{file generate inside the default specified folder}
Open and copy that contains
4) Open gitLab
5) Profile
6) Preferences
7) SSH Keys
8) Paste in that box
9) generate ssh keys


6) What is fork ?
----------------------------------------------------------------------------------------
Fork means copy of your project.  
Fork allows us to make chnages without affecting on origin project.
Go to repository which want to fork , select fork option and create fork.


7) What is gitlab runner?
----------------------------------------------------------------------------------------
1) Gitlab runner is used in gitlab CI.

8)What is git rebash
---------------------------------------------------------------------------------------
  Git rebash is commnd that us integrate changes from one branch to another branch.
  
  whereas git merge allows to git branches on git.
  
 9) How to delete .git folder?
 -----------------------------------------------------------------------------------------
 rmn -fr .git
 
 10) How to use Git  from eclipse itself?
 -----------------------------------------------------------------------
 
 Eclise ---> Team ---> for pull{ first one}
 
 Eclipse ---> Team  ----> Commit ----> Commit and push directly
 
 Eclipse ---> Team ----> swith To --> Newbranch
 
 
 11) What is the purpose of git stash?
 ---------------------------------------------------------------------
 Git stash allows us to switch other branch without commiting the changes.
 for eg-
 A) suppose i am working on branch B and i have make some changes on it,
 now someone says like go to branch A and fix that issue and then work 
 on branch B.
 so whatever changes i made in branch B i need to save them on local somewhere.... for 
 that purpose i will do git stash and move to branch A.
 once i complete my work then i will switch back the branch B
 and i will use the git commit such as git stash pop.
 then all stages changes get back to my local code.
 
 some time you will see that the changes to be committed
 to restore them you need to use git restore --stages <put the files name>
 
 
 12) How to switch other branches?
 ---------------------------------------------------------------------
 1) suppose you have lot's of branches and master is your main branch of project,
    and you are working on branch B and suppose your work is completed.
    Now you need to commit your changes and push it into the master branch.
    
 2) Now you need to work of another taks so first switch the master branch
    pull all the changes.
    create new branch form master and start working
    
    git branch branchName
    
    git branch --list
    
    git checkout branchName
    
    
  13) How to delete branch from eclipse?
  ---------------------------------------------------------------------
  If you want to delete any branch first you need to switch the main 
  branch.
  go to eclipse --> Team ---> Advanced ---> DeleteBranch ---> select the branch name.
  
  
  14) How to send pull request from eclipse?
  ---------------------------------------------------------------------
  Go to eclipse , write click on project ---> Team ---> 
  pull(first and second) use first one.
  
  
  15) How to create or add tag ?
  ---------------------------------------------------------------------
  1) Go to main branch or switch branch you want to make tag.
   git show
   git tag
   git tag <tagName>
   git push --tags
   git tag -d <tagName>
   git push origin -d <tagName>
   
  
  16) Why we need to create the tags?
 ---------------------------------------------------------------------
 Basically tags created to make upto that part release.
 Or we can say upto this point code is stable.
 
 
 17) How to delete the branch from bitbucket or github as well as from local?
  ---------------------------------------------------------------------
  A) git branch or git branch --list
     to check how many branches present
 B) git checkout <mainbranch>
 C) deleting from github or bitbucket
    git push origin --delete <branchName>
 d) check the git branch
 e) deleting from local
    git branch -d stage
    
  
 
 18) How to changes alreday commit mesasage?
 -----------------------------------------------------------------------
 git revert commitId
 
 blue screen get opened press Esp+i
 mouse will not work use only up down arrow.
 put modify message in double quatos.
 
 ctrl+c save
 Esp+wq!
 exit.
 
 But the file also get deleted copy that files and paste it into workspcae.
 and push again
 
19) How to take back your commited files on github?
-----------------------------------------------------------------------
git reset --soft commit Id. (please enter commit id below that commit,so
what ever files present above it will get add into staging area)


20) How to check who and when is commited the changes or files?

-----------------------------------------------------------------------
Go to class --> Team ---> Show in histroy ---> select 2 comments ---> Compare with each other

21) What is the difference between git soft and git hard commond?
-----------------------------------------------------------------------
git reset --soft commit id (takes back file to working area from staging area)
git reset --hard commit id (it delte the files)

22) How to check remote origin added or not?
-----------------------------------------------------------------------
git remote -v


23) How to modify files on it?
-----------------------------------------------------------------------
open the file
vi filesName
ESP+i (add your changes)
ctrl+c(save) ESP:wq!


24) How to come back previous version of modify code or class?
-----------------------------------------------------------------------
git reset HEAD fileName

25) How to move file from staging area to working area? (green to red)?
-----------------------------------------------------------------------
git reset HEAD -- filepath

OR

git reset filePath

git reset Config-server (gives  a module name If want to move all files)

git reset filepath (it will reset a single file)

config/eureka/com/cli/
git reset config
(if it give ambigious as erro)
git reset config/eureka


26) How to remove unwanted chnages? or target file create? When you take new branch pull?
-----------------------------------------------------------------------
git clean -d -f

27) How to move file from staging area to working area? (green to red)
-----------------------------------------------------------------------
git reset file-path      CLSManagement/src/main
half path also suffient to move all changes , for specific enter full path.

28) How to push empty or new branch in stash?
-----------------------------------------------------------------------
git push --set-upstream origin new_branch_name

29) How to check user name and email of git bash?
-----------------------------------------------------------------------
git config --list

30) How to resolve merge conflicts?
-----------------------------------------------------------------------
Merge conflicts we have to reslove manually.
1) First will discuss when merge conflicts occurs, suppose two or more
devolper working on same branch, same class we will got merge conflict issue.
becuase both of them modified same lines.

2) Step first should be -suppose opposite developer pushed thier
changes first take pull, now you got merge conflict, discuss with him/her
about that keep required changes, remove non required and then you can
push final changes.

3) Now test the changes or confirm it's working fine or not

31) How to do replace with head revision using git commond?
-----------------------------------------------------------------------
What is replace with head revision?
Replace with head revision means suppose you have made changes in class,
but you don't want it , you want to make the as it is like previous or before
modify.

git checkout -- completeClassPath


32) How to git merge?
-----------------------------------------------------------------------
git merge origin/branchName


33) suppose you have create branch from developement ,i.e inbound-gateway.
And other teams also create new branch from developement i.e outbound-gatway
they made their changes and pushed back into developement branch then how will you get those changes in your branch i.e inbound-gateway?
-----------------------------------------------------------------------
simply we can do git merge origin/development

34) How to remove staged file into working directory?
-----------------------------------------------------------------------
1) first use
git checkout -- filePath.

But sometimes it won't be work.
Don't worry use below commond first

2) git reset HEAD filePath
check 
if not move then use git checkout --filePath


35) How to delete any file?
_____________________________________________________________________________________________________________________________
rm -r filePath/name

36) How to change or modify the commited message?
_____________________________________________________________________________________________________________________________
git commit --amend -m "New Commit Message"

git push --force


37) Suppose you took merge from other branch or parent branch and it's showing conflicts, you don't want to merge it.
    you want to reset the as it is , which cmd you are going to use?
_____________________________________________________________________________________________________________________________
git merge --abort


38) How can we update previous commmit messages?
_______________________________________________________________________________________________________________________

i) git rebash -i HEAD~n  
###n means the number of commit message you want to update, like if you want modify 17 number of commit messsage , enter 17 as n value
for eg - git rebash -i HEAD~17

ii) once you press enter button , automatically text editior will get opened like this
pick<commit1_hash> First commit message
pick<commit2_hash> Second commit message
pick<commit3_hash> Third commit message

iii) Now the pick to reword ,i.e which commit you want to modify.
for eg - 
reword<commit1_hash> First commit message
pick<commit2_hash> Second commit message
reword<commit3_hash> Third commit message
 save the editior.

iv) git push --force

38) How to back changes after you did commit -m ? 
_______________________________________________________________________________________________________________________

git reset --soft HEAD~1



39) How to move file from staging area to working area ?
_______________________________________________________________________________________________________________________
git restore --staged file 
 
    
 
 
8) FISHEYE
=======================================================================================================================================================================
 1) How to raise code review on fisheye
 
 A) create review --- > select project name ----> browsw changes ---> select branch name and click onn check box ---> done
                      ---> click on edit option ----> add the review names
   
    

8) Outook
=======================================================================================================================================================================
1) How to recall the message and sent new again?
------------------------------------------------------------------------------------------------------------------------------------
1) Go to sent box
2) Double click on message new window get opened.
3) Click on File
4) Recall or resend
5) click on recall
    A) delete unread copies and replace with new one.
6) Edit and sent it again
