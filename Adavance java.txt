----------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                         !!! Shree Swami Samarth !!!
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------



1) Array 
======================================================================================================================

----------------------------------------------------------------------------------------------------------------------
1) On which memory array created in java?
----------------------------------------------------------------------------------------------------------------------Array are created in dyanamic memory there is no question about static because varibale,object, array created in dyanamic memory.
----------------------------------------------------------------------------------------------------------------------
2) What is array in Java?
----------------------------------------------------------------------------------------------------------------------Array is an object. It is used to store homomgenous element. It supports both primitive data type and object. 
Array is fixed in size. The performance of array is faster.
----------------------------------------------------------------------------------------------------------------------
3) What are the types of array in java?
----------------------------------------------------------------------------------------------------------------------
There are two types of arrays in java
1) 1D array - It has only one row or only one column
2) 2D or 3D array- It has mutiple rows and multiple columns.

----------------------------------------------------------------------------------------------------------------------
4) What are the advantages of array?
--------------------------------------------------------------------------------------------------------------------1) Random access
    array provide random access so by using it's index we can access any element
 2) Code optimization 
----------------------------------------------------------------------------------------------------------------------
5) Is it possible to declare array size negative?
----------------------------------------------------------------------------------------------------------------------No it's not possible to declare array size negative if you declare array size negative it compile succesfully.
but runtime shows negative size exception error.
----------------------------------------------------------------------------------------------------------------------
6) what is the diffrence between int array[] and int[] array?
----------------------------------------------------------------------------------------------------------------------Both are the declaration of an array the main difference that is int array[] at postfix means we want to declare  
only one array whereas int[] array at prefix means we can add if you want.
----------------------------------------------------------------------------------------------------------------------
7) How to copy arrays in java?
---------------------------------------------------------------------------------------------------------------------- We can copy manually also array provides arrays.copy() method by using this we can copy array in java.                         
----------------------------------------------------------------------------------------------------------------------
8) What is the default value of array?
----------------------------------------------------------------------------------------------------------------------
for int,byte,short,long it is 0 and boolean is false and object is null.float,double is also o
                                                 
----------------------------------------------------------------------------------------------------------------------
9) What do you understand by jagged array? 
----------------------------------------------------------------------------------------------------------------------Jagged array is combination of multidimensional array, In which arrays has different size.
for eg- int a[][]=new int[3][];
----------------------------------------------------------------------------------------------------------------------
10) What is anonymous array and it's examples? 
----------------------------------------------------------------------------------------------------------------------Anonymous array means array reference is not stored in variable.
It is used to construct another object.
----------------------------------------------------------------------------------------------------------------------
11) How many ways to findout duplicate element in an array? 
----------------------------------------------------------------------------------------------------------------------By using Hashset,Treeset,LinkedHashSet and brut force method we can find out duplicate element in an array.
----------------------------------------------------------------------------------------------------------------------
12) Which operation can be performed in an array? 
----------------------------------------------------------------------------------------------------------------------In array we can perform operation such as insertion,sorting,searching,deletion,treaversal operations.
----------------------------------------------------------------------------------------------------------------------
13) Can a set be an array?                                                                                            --------------------------------------------------------------------------------------------------------------------- In java a set can be array but it not neccessary that array is set because, array allows duplicate values,
 set cann't allows duplicates values. for eg l,o,o,p in allows in array where in set it become l,o,p.
----------------------------------------------------------------------------------------------------------------------
14) Is it possible to make array volatile? 
----------------------------------------------------------------------------------------------------------------------Yes, it's possible to make array volatile but only those elements poining to array volatile.                          ----------------------------------------------------------------------------------------------------------------------
15) What happen if you declare array without assigining size? 
----------------------------------------------------------------------------------------------------------------------
It will shows comiple time error.
---------------------------------------------------------------------------
16) Can we declare array size negative? 
----------------------------------------------------------------------------------------------------------------------
No we can't declare array size negative if you try to declare array size negative it will show negative size          expection  error. 
----------------------------------------------------------------------------------------------------------------------
17) Which method of array class used to serach specific element in an array? 
----------------------------------------------------------------------------------------------------------------------Binary serach method of array class is used to search specific element in an array.
----------------------------------------------------------------------------------------------------------------------
18) How to retrieve class name of an array? 
----------------------------------------------------------------------------------------------------------------------
Array is an object from which we can easily retrieve the class name by using getName() and getclass() method
----------------------------------------------------------------------------------------------------------------------
19) What is difference between array and arraylist? 
--------------------------------------------------------------------------------------------
               Array                                               ArrayList
 1) Array is fixed in size                                  1)Arraylist is groable in size
 2) Array support both primitive data type and objects      2)Arraylist is support only objects not primitive data type.
3) Array store homogenous element                           3)Arraylist store both homogenous and hetrogenous element
4) Array perfromance is faster than the arraylist           4)Arraylist performance is slower than the array
5) Array doesn't have generic feature                       5) Arraylist have generic feature.

----------------------------------------------------------------------------------------------------------------------
20) How can we check array containd values or not? 
----------------------------------------------------------------------------------------------------------------------By using contain() method we can check array contain values or not.
----------------------------------------------------------------------------------------------------------------------
21) What is the equilibrium index of array? 
----------------------------------------------------------------------------------------------------------------------Equilibrium index of array is sum of lower indices and sum of higher indices.
----------------------------------------------------------------------------------------------------------------------
22) What is left rotations in an array? 
----------------------------------------------------------------------------------------------------------------------Left rotations of array means shifting array from lower index of array come to higher index. ie shift one unit to left side 
----------------------------------------------------------------------------------------------------------------------
23) What is advantages and disadvantages array? 
----------------------------------------------------------------------------------------------------------------------Advantages
1) Random access - we can easily access any element by using it's index
2) Code optimization

Disadvantages
1) Array is fixed in size we are not able to add parameter at a runtime.
----------------------------------------------------------------------------------------------------------------------
24) 1D declaration of array and how to read? 
----------------------------------------------------------------------------------------------------------------------Declaration of array
int a[];     int[] a;
int []a;      int  []a;
                                                                                                                      ** We can't provide size of array at the time of declaration
for eg: int[3] a;      int a[3];
1) int[] a,b
a is one dimensional int array and b is one dimensioanl int array.
                                                                                                                      2) int []a,b; 
a is one dimensional int array and b is one dimensional int array.
                                                                                                                       3)int a[],b;
   a is one dimensional int array and b is simple variable of type int.
4) int a,[]b;
   a is simple variable of type int  and b is one dimensional int array. 
                                                                                                                      5) int a,b[];                                                                                    
  a is simple array  and b shows compile time error.
----------------------------------------------------------------------------------------------------------------------
22) Contiguous memory locations are usually used for storing actual values in an
    array but not in ArrayList. Explain.? 
----------------------------------------------------------------------------------------------------------------------
22)What could be the tradeoff between the usage of an unordered array versus the usage of an ordered array?
----------------------------------------------------------------------------------------------------------------------The advantage of ordered array has serach time complexity is o(log n),wheras unordered array is o(n).
------------------------------------------------------------------	
22) When index out of bond exception occur?
----------------------------------------------------------------------------------------------------------------------Index out of bond exception will occur when array index is negative,equal or greather than the length of array.     
Array index out of bond exception will occur , when you try to access the array element outside from the valid range.





======================================================================================================================
======================================================================================================================
2) Exception Handeling
======================================================================================================================
======================================================================================================================
---------------------------------------------------------------------------------------------------------------------------------------
1) What is Expection Handeling in Java? ##################################
---------------------------------------------------------------------------------------------------------------------------------------
Exception handeling is mechanism that used to handel the runtime exception in java such as IO exception,classNotFound Exception,SQL Exception.

---------------------------------------------------------------------------------------------------------------------------------------
2) What is Expection?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Exception means abnormal condition occurs due to human error and bad input.  

---------------------------------------------------------------------------------------------------------------------------------------
What is the purpose of exception handeling?
---------------------------------------------------------------------------------------------------------------------------------------
If you don't handel it program will get direclty terminated.   
To maintain normal flow of the program.


class Test{

   public static void main(String args[]){
    System.out.println(1);
    System.out.println(1/0);    
    System.out.println(1);
     System.out.println(1);
    System.out.println(1);
    
      }
      
  }
  
   output - 1

---------------------------------------------------------------------------------------------------------------------------------------
3) Hierarchy of Java Exception classes?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                   object
								    |
                                                                Throwable  (class)                                                                                                                                                                  |

                                                                                                                                                   
      |---------------------------------------------------------------------------------------------------------------------------------------------|
Exception                                                                                                                                         Error
     |                                                                                                                                              |
     |                                                                                                                                              |
     |                                                                                                                                              |
     |                                                                                                                                              |
 
---------------------------------------------------------                                 -----------------------------------------------------------
|                                                       |                                 |                         |                               |                 |                                                       |                                 |                         |                               |
|                                                       |                                 |                         |                               |
Checked Expetion                                     Uncheked Exception             OutOfMemoryError             Stack Overflow                    virtual machine 
|                                                        |                (WHEN condition always evalute true)   (recursion)                (jar file missing)
|                                                        | 
|                                                        |
|                                                        ---------------------------------------------------|                                   
|                                                                                                           |
----------------------------------------------------------                            ------------------------------------------------------------------
|                          |                             |                            |           |                           |                         |             |                          |                             |                            |           |                           |                         |
 IO Exception        SQLException         ClassNotFound Exception         Runtime Exception       IndexOutOfBondException   ArithmeticException  ullPointerException
                                                                                                      |                                                       
                                                                                                      |                                                                                                                                               |-----------------------------------------------|
										|	                                        |
										|                                               |
										|                                               |
                                                                       ArrayIndexOutOfBondException                StringIndexOutOfBondException


---------------------------------------------------------------------------------------------------------------------------------------
4) What are the types of exception in java?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       There are two types of exception in java 
                                                                                                                                                                                           1)Checked Exception -
																					             Checked exception means compile time exception, we can handel it by using try and catch block.
		     Compile time exception means compiler able to find that exception during compile time.
		     The exception direclty inherit from throwable classes except runtime called as checked exception.
							                                                                                                                                   Checked excetion handel at compile time.
                                                                                                                                                                                           eg-
																						    1) IOException
                                                                                                                                                                                           2) SQLException
                                                                                                                                                                                           3)ClassNotFoundException

                                                                                                                                                                                           2)Unchecked Exception
																					              Unchecked exception is also known as runtime exception. Compiler not able to 
		      find that exception during compile time called as compile time exception.																	
			                                                                                                                                                                   1)The exception directly inherit from runtime exception called as unchecked expection 
                                                                                                                                                                                           Unchecked Expection handeled at runtime
                                                                                                                                                                                           eg-1)Index out of Bond Exception( Index out of bond exception occur if you try to acccess index negative, equal to or greather than the
																							   length).
																							   (Array index out of bond exception- Array index out of bond exception will occur if you try to access index of array 
																							   is negative, equal to or greather than the length of array).
																							   (String index out of bond exception will occur if you try to accesss String index negative, greather or equal to the length of String)
                                                                                                                                                                                           2)Arithmetic Exception
                                                                                                                                                                                           3)Null Pointer Expetion

                                                                                                                                                                                           3)Error
                                                                                                                                                                                           Error means irrecoverable.
                                                                                                                                                                                           for eg
                                                                                                                                                                                           1)Virtual m/c error -Jar file
                                                                                                                                                                                           2)Stackoverflow - recurion time
                                                                                                                                                                                           3)OutofMemeotyerror- occur in loop always evalute true
																							   
												
--------------------------------------------------------------------------------------------------------------------------------------- 			
4) What is the difference between exception and error?
--------------------------------------------------------------------------------------------------------------------------------------- 
Exception occurs due bad input or human error.
It is recoverable or we can handel it.
There are two types of exception
1) compile time exception ( checked exception) 
2) Runtime exception (unchecked exception)

Error means irrecoverable.
It occurs due to lack of system resource.


                                                                                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------
5) Keywords of Exception? 
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                                                  1)try 
                                                                                                                                                                                                  2)Catch
                                                                                                                                                                                                  3)finally
                                                                                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------
6)Try block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Inside the try we should place exception. after the try block we use catch block that means we can't use                                                                try block alone.

---------------------------------------------------------------------------------------------------------------------------------------
7) Catch Block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       afert the try block we should use catch block.that means we can't use catch block alone.A exception occur
                                                                                                                                                                         in try block it must be handel in catch block .

---------------------------------------------------------------------------------------------------------------------------------------
8) Finally block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       finally block is used to excute important code of the program such as closing file,closing connection or etc. It                                                        execute whether the exception occur or not that means it execute always. It doesn't execute when fatal error occur
                                                                                                                                                                        or we can extenally call system.exit() method                                                                                                                                                                                                                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------
9) throw keyword?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       throw keyword is used to thrown an exception. checked exception can't propagate by using throw keyword.                                                               throw keyword is used within the method body. by using throw keyword we can't declare multiple exception.
                                                                                                                                                                      throw keyword is used followed instance.

---------------------------------------------------------------------------------------------------------------------------------------
10) throws keyword?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                         throws keywords is used to declare to an exception. throws keyowrd is used with method signature.
                                                                                                                                                                         throws keyword is used to follows class.checked exception propagated by using throw keyowrd. You can declare
                                                                                                                                                                         multiple exception by using throws.             

---------------------------------------------------------------------------------------------------------------------------------------
11) Why we use Finally block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       finally block is used to execute important code of the program such as closing file, closing connedction etc.                                                          It execute always whether exception occur or not. It doesn't exceute if fatal error occur or we can externally
                                                                                                                                                                        call system.exit() method. 

---------------------------------------------------------------------------------------------------------------------------------------
12) Why we use Finally block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Exception block is used to exceute important code of the program such as closing files,closing connection                                                             or etc.It is ensurely executed i.e whether exception handeled or not. 

---------------------------------------------------------------------------------------------------------------------------------------
13) What is the main advantage of Exception Handeling?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       To maintain normal flow of the program we handel the exception.
If we don't handel the exception program will get direclty terminated.																				       
---------------------------------------------------------------------------------------------------------------------------------------
14) How can you handel exception in java?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       By using try,catch and finally block is used to handel the exception.                                                                                                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------
15) What are the new feature added in java 1.7?
---------------------------------------------------------------------------------------------------------------------------------------
1) Try with resource- A try statement declare with one or more resource called as try with resource.                                                                   If we use try with resource we don't need to use finally block for closing connection.
                                                                                                                                                                       2) Single Catch Block Handel Muliple exception by using vertical bar or pipe. (|)

---------------------------------------------------------------------------------------------------------------------------------------
16) What is the difference between throw and throws?
---------------------------------------------------------------------------------------------------------------------------------------
                           throw                                                                                         throws
 1) throw keyword follws an instance.                               1) throws keywords follows as class.
 2) checked exception can't propagate by using throw                2) by using throws keyword we can propagate the checked 
    keyword.                                                           exception.
 3) we are not able to declare multiple exception by using          3) we can declare multiple exception by using throws keyword.
    throw keyword                                                      for eg-
    for eg- throw new UserNotFoundExceptio();                          public void getResult() FileNotFoundException,ClassNotFoundException{
 4) throw keyword is declare within the method                         }
    body.                                                            4) throws keyword declared within the method singnature.

---------------------------------------------------------------------------------------------------------------------------------------
17) Which exception bydefault handeled in calling chain?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Unchecked exception by default followed in calling chain                                                                                                                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------
18) Can we handel mutilple exception in single catch block and how?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                      Yes we can handel mutiple exception in single catch block by using vertical pipe or bar.                                                                                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------
19) What is exception propagation?
---------------------------------------------------------------------------------------------------------------------------------------
exception propagation means exception thrown from top of the stack to the bottom of the stack if not catched                                                           then drop down again main method called as exception propagation.

---------------------------------------------------------------------------------------------------------------------------------------
20) What is custom exception and How to create and why we need ?
---------------------------------------------------------------------------------------------------------------------------------------
Custom exception means user defined exception.It is used to catch and provide specific treatment to exiting java exception. 
Business logic exception 
                                                                                                                                                                        1)class NewExcpetion extends Exception
                                                                                                                                                                       2) class NewException extends RuntimeException
                                                                                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------
21) Can we keep other statement in try,catch and finally block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       No we can't keep other statement in try catch and fianlly block                                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
22) There are three statement in try block and if exception occure in second statement then does control go to
    third statement or catch block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                      If exception occur in secod statment of try block then control directly goes to catch block and third the statement                                                                                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------
23) What is unreachable catch block error?
---------------------------------------------------------------------------------------------------------------------------------------
If you are keeping mutliple catch block then it must be placed in order such as first subclass and then super class
It you keep first super class then subclass it shows unreachaable catch block error.
---------------------------------------------------------------------------------------------------------------------------------------
24) What are the runtime exception in java & give example?
---------------------------------------------------------------------------------------------------------------------------------------
The excepetion directly inherit from unchecked exception called as runtime exception.                                                                                  Runtime exception handel at runtime. eg - IndexOutOfBond exception,airthmetic exception, null pointer exception                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------
25) What is out of memory error in java?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Out of memory error is subclass of java.lang.error. This type of exception occur in loop when condition                                                                evaluate always true
---------------------------------------------------------------------------------------------------------------------------------------
25) What is class not found exception & No class defination found error in java?
---------------------------------------------------------------------------------------------------------------------------------------
classNotFound Exception occur when you load the class and the class not found in path.                                                                                 NoClassDefinationFoundException occur when you compile the class and at the runtime they are not present.

---------------------------------------------------------------------------------------------------------------------------------------
26) Can we keep the statement after finally block if control returing from the finally block itself?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       No , we can't keep anything if finally block return control. if you keep it will shows unrechable catch block error                                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
27) Does finally block get exceute if either try and catch blocks are returning the control?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Yes, finally block always execute either control returning from try or catch block

---------------------------------------------------------------------------------------------------------------------------------------
28) What is re-throwing an exception in java?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       If exception occur in try block it must be follw in catch block if catch block is not able to handel then we need to 
                                                                                                                                                                       rethroew that expection by using throw keyword
---------------------------------------------------------------------------------------------------------------------------------------
29) Why it is always recommonded that cleanup operations like DB resources keep inside finally block?
---------------------------------------------------------------------------------------------------------------------------------------
Finally block is used to execute important code of the program such as closing file,closing connection etc.                                                            It executed always exception occured or not. That means fianlly block ensurely executed. That's always recommnded that important code kept inside the finally block.
---------------------------------------------------------------------------------------------------------------------------------------
30) What is difference between final, finally and finiliaze in java?
---------------------------------------------------------------------------------------------------------------------------------------
         Final                                                     Finally                                            finalize
1) Final is nonaccess modifier keyword.                1) Finally keyword is used to execute        1) Finalize                                                    
Once we declare a class is final we can't                 important code of the program.             method executed just before the object
inherit it in subclass. Once we declare                2) It execute always wheather                 is garbage collected. It is process of cleaning
method is final we can't overide it in subclass.         the exception handeled or not.              and remove unreferenced object automatically when
Once we declare a variable is final                                                                  we create without using new keyword.
and initialized it we can't change
it's value.





---------------------------------------------------------------------------------------------------------------------------------------
31) What is class cast exception in java?
--------------------------------------------------------------------------------------------------------------------------------------                                  Class cast exeption means jvm unable to cast exection one object type over another type.                                      
---------------------------------------------------------------------------------------------------------------------------------------
32) What is the difference between throw,throws and throwable in java?
---------------------------------------------------------------------------------------------------------------------------------------
1)throw - 
1)throw keyword is used to throw an exception.
2) throw keyword follwed by an instance.
3)checked exception can't propagated by using throw only.
4) We can't thorw multiple exception by thorw.
5) throw keyword is declared inside the body.

2)throws - 
1)throws keyowrd is used to declare an exception.
2) throws keyword is followed by class 
3)by using throws keyowrd we can declare multiple exception. 
4)Chekced exception propagated by using throws keyword. 
5)throws keyword is declared within method singnature.

3)throwable - 
1)throwable is root class of all exception and errors.                                                                                                                                                                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------
33) What is stackoverflow error in java?
---------------------------------------------------------------------------------------------------------------------------------                                      Stack overflow error is subclass of java.lang.error. It occur when jvm stack overflows.( for eg- this type of
error generally occur when stack overflows).
Rucursion program
---------------------------------------------------------------------------------------------------------------------------------------
34) Can we overide super class method which throwing unchecked exception with checked exception in the subclass?
---------------------------------------------------------------------------------------------------------------------------------------
No we can't override. for exception we required same i.e if parenT class thorowing unchecked exception then subclass must be throws unchecked exception                                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
35) What is chained exception in java?
---------------------------------------------------------------------------------------------------------------------------------------
Chained exception means identify one exception causes another exception in an application.                                                                                                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------
36) Which class is super class for all error and exception?
---------------------------------------------------------------------------------------------------------------------------------------
Throwable class is super class for all error and exceptions.                                                                                                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------
37) What is the use of printstackTrace() method?
---------------------------------------------------------------------------------------------------------------------------------------
PrintstackTrace() method is used to declare details information if exception occured.                                                                                                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------
38) Give some example of checked exception?
-------------------------------------------------------------------------------------------------------------------------------------
1)IO Expection 2)SQL Exception 3)ClassNotFoundException

---------------------------------------------------------------------------------------------------------------------------------------
39) Give some example of unchcked exception?
---------------------------------------------------------------------------------------------------------------------------------------
1)Index out of bond exception 2)AithmeticExcpetion 3)NullPointerException                                                                                             ---------------------------------------------------------------------------------------------------------------------------------------
40) What is try with resource statement in java and it's advantages?
---------------------------------------------------------------------------------------------------------------------------------------
a try statement is declared with one or more resource is called as try with resource.                                                                                 when we use try with resource we don't need to use finally block.
---------------------------------------------------------------------------------------------------------------------------------------
41) Which class is super class for all error and exception?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Throwable class is super class for all error and exception.(throwable is a class not an interface)

---------------------------------------------------------------------------------------------------------------------------------------
42) A single try block and multiple catch blocks can co-exist in a Java Program.
   Explain.?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       At a time only one exception occur and only one catch block will get exceute.
                                                                                                                                                                       We can keep a single try block and mutiple catch block but it should be placed in order such as
                                                                                                                                                                      first we  write specific and then general. for eg - first we write arithmetic expection and then we write exception
                                                                                                                                                                      block. 
                                                                                                                                                                      high prioriety catch block exceuted first

---------------------------------------------------------------------------------------------------------------------------------------
43) Do final, finally and finalize keywords have the same function?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Each keyword has different function.
                                                                                                                                                                       final is used to restrict the user. finally block is used execute impotant code of the program such as closing files.
                                                                                                                                                                       closing connection,etc. finallize method execute just before the object is garbage collected.
                                                                                                                                                                       It is process of cleaning.

---------------------------------------------------------------------------------------------------------------------------------------
44)  Is it mandatory for a catch block to be followed after try block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       No,it's not neccesarry each try block must be follwed by catch block, we can use finally block instead of catch                                                       block and and thrown exception by using throws.

---------------------------------------------------------------------------------------------------------------------------------------
45) Will the finally block be executed if the code System.exit(0) is written at the end
    of try block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       NO, then finally block will not get execute.
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        try {

                                                                                                                                                                          //try block
                                                                                                                                                                          System.out.println("Inside try block");
                                                                                                                                                                          System.exit(0)
                                                                                                                                                                       }
                                                                                                                                                                       catch (Exception exp) {
                                                                                                                                                                          System.out.println(exp);
                                                                                                                                                                       }
                                                                                                                                                                       finally {
                                                                                                                                                                          System.out.println("Java finally block");
                                                                                                                                                                       }

---------------------------------------------------------------------------------------------------------------------------------------
46) Difference between exception and error (explain with real time example)?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       Exception occurs due to human mistake or bad input. we can handel it by using try catch and finally block.
                                                                                                                                                                       Error means irrecoverable, error occur due to something lack of resource in the system. To handel error
                                                                                                                                                                       Programmer need to fix that issue.
																				       
---------------------------------------------------------------------------------------------------------------------------------------
46) How we can exist code in try block means i don't want to execute finally block?
---------------------------------------------------------------------------------------------------------------------------------------
we know that finally block always execute wheather exception handeled or not. But if you want to forcefully stop stop the exceution of 
finally block then we just write system.exit(0) method at the end of catch block and just before the fianlly block.

---------------------------------------------------------------------------------------------------------------------------------------
46) What is custom exception and example?
---------------------------------------------------------------------------------------------------------------------------------------
Custom exception means user defined exception. It used to catch and provide specific treatment to exisitng java exception. It mainly used in business
logic exception.

class NewExpection extends Exception
class NewException extends RuntimeException

class InvalidVotterException extends Exception{

InvalidVotterException(String err){
super(err);
}

class Votter{
public static void checkEligiblityCriteria(int age) throws InvalidVotterException(){
if(age<18){
thorw new InvalidVotterException("You are not eligible for votting");
}else{
System.out.println("You are eligible for votting");
}
}
public static void main(String args[]) thorws InvalidVotterException{
Scanner sc=new Scanner(System.in);
System.out.println("Enter your age::");
int age=sc.nextInt();
checkEligiblityCriteria(age);
}

---------------------------------------------------------------------------------------------------------------------------------------	
47) What is class Not found Exception in java?
---------------------------------------------------------------------------------------------------------------------------------------
Class not found exception occur when we load the class and the class is not present in the path.

---------------------------------------------------------------------------------------------------------------------------------------
48) Who is responsible for runnable to running transition? ##########################
---------------------------------------------------------------------------------------------------------------------------------------
Thread sheduler.

---------------------------------------------------------------------------------------------------------------------------------------	
49) State some situations where exceptions may arise in java?
---------------------------------------------------------------------------------------------------------------------------------------
1) If you are fetching data from database based on the id or name and if the entered id or data is not present in db it will throw null pointer exception.
2) If you entered wrong input for ex- instread on number if you entered character it will show InputMissMatchException.
3) If load the class and class is not present in class path it will show classNotFound Exception.
4) If you load the class and the class is present at compile time and runtime the class will not found it will show NoclassDefFoundError exception.

---------------------------------------------------------------------------------------------------------------------------------------	
50) In how many ways we can do exception handling in java? or List out five keywords related to Exception handling ?
---------------------------------------------------------------------------------------------------------------------------------------	
Exception handeleing by using try,catch and finally block.(try,catch,finally,throw,throws)

---------------------------------------------------------------------------------------------------------------------------------------	
51) What is Default exception handeling in java?
---------------------------------------------------------------------------------------------------------------------------------------	
Default exception handeled in java by JVM. If any exception occur in the program JVM will identify the exact exception.

---------------------------------------------------------------------------------------------------------------------------------------	
52) Can we write any code after throw statement?
---------------------------------------------------------------------------------------------------------------------------------------	
No we can't write any code after throw statement if you try to write it will show compile time error.ie .

---------------------------------------------------------------------------------------------------------------------------------------	
53) Explain the importance of finally over return statement?
---------------------------------------------------------------------------------------------------------------------------------------	
 Finally block is more important than the return statement. If we have both finally block return statement in try and catch block then first
 fianlly block will get execute after that return statement execute.

---------------------------------------------------------------------------------------------------------------------------------------	 
 54) Can we use catch statement for checked exceptions?
 ---------------------------------------------------------------------------------------------------------------------------------------	
 No we can't use catch statement for checked exceptions.

---------------------------------------------------------------------------------------------------------------------------------------	 
 54) Can we nested try statement in java?
 ---------------------------------------------------------------------------------------------------------------------------------------	
 yes we nested try statement in java that means we can declare a try block inside anothoer block of try statement.

---------------------------------------------------------------------------------------------------------------------------------------	 
 54) Explain the importnce of throwable class and it's method?
---------------------------------------------------------------------------------------------------------------------------------------	
 Throwable is root class of all error and exception. 
 There are following methods of exception such as
 1) printStackTraceMethod() - gives deatils explanation of error occured.
 2) getMessage()- gives description of expcetion occur.
 
 ---------------------------------------------------------------------------------------------------------------------------------------	
 55) Global Exception Handeler
 ---------------------------------------------------------------------------------------------------------------------------------------	
1) Create class extends as RepsonseEntityExceptionHandeler
2)Use @ControllerAdvice Annotations as class level

 for eg
 @ControllerAdvice
 class GLobalExceptionHandeler extends RepsonseEntityExceptionHandeler{

@ExceptionHandeler(UserInputException.class)
 public ResponseEntity<String> userInputExcpetionHandeler(UserInputException exception){
 return new ResponseEntity<String>("Please enter valid input data ",HttpStatus.BAD_REQUEST);
 }


3) What ever custom exception you want to create they extends as Expection or RuntimeException
4) write @Component annotatios above that exception.

@Component
@Data
@AllArgConstructor
@NoAllArgConstructor
class UserInputException extends RuntimeException{
private String error code;
private String errorMsg;
}
---------------------------------------------------------------------------------------------------------------------------------------
56) When index out of bond exception arise?
--------------------------------------------------------------------------------------------------------------------------------------- 
If you try to access array index negative ,greather or equal to length we will get this excpetion.

--------------------------------------------------------------------------------------------------------------------------------------- 
57) What will happen if first i keep parent exception then child exception?
--------------------------------------------------------------------------------------------------------------------------------------- 
It will shows compile time exception.
If you are keeping mutiple catch block then first keep
child class then parent class.

58) Who is the parent class of throwable class?
--------------------------------------------------------------------------------------------------------------------------------------- 
object class the parent class of throwable class.

59) Can we use finally block instead of catch block?
--------------------------------------------------------------------------------------------------------------------------------------- 
Yes we can use finally block instead of catch block but we can't handel the exception.

try{

   }finally{
   
       }
       
60) Can we write try and catch block inside the finally block?
--------------------------------------------------------------------------------------------------------------------------------------- 
Yes we can write try and catch block inside the finally block.

61) Wrong scenario or not possible snenario of try,catch and finally block?
--------------------------------------------------------------------------------------------------------------------------------------- 
A) 
try{

  }finally{
  
   }catch{
   
    }
    
B)
 try{
     
     }
     System.out.print("hi");
     catch{
     
     }
 try without catch exception we will get.
 

62) Possible scenario for try catch and finally block?
--------------------------------------------------------------------------------------------------------------------------------------- 
A)
try{
         try{
	      }catch{
	      
	            }
		    
   }catch{
   
   }
 
B) try{

      }catch{
               try{
	       
	          }catch{
		   }
    }
    
C) try{

       }finally{
            }try{
	    
	     }catch{
	     
	     }
	     
	     
   

63) Can we declare or write any statement after throw keyword?
--------------------------------------------------------------------------------------------------------------------------------------- 
No, we can't write any statement after throw keyword.

64) Custom exception is part of checked or unchecked exception?
--------------------------------------------------------------------------------------------------------------------------------------- 
Custom exception is part of checked exception. 
We can  declare it by using new keyword.

65) Exception Handeling concepts
--------------------------------------------------------------------------------------------------------------------------------------- 

1) If parent class doesn't throw any exception and then subclass doesn't throws checked exception.
   If you try to declare you will get compile time error.
   
   class A{
      public void getResult(){
          System.out.println("Hello");
	    }
	} 
    class B{
       public void getResult() throws IOException{
          System.out.println("Hi");
	    }
	}
	
	
2) IF Parent class doesn't throw any exception and child class can throw unchecked exception.

     class A{
          public void getResult(){
            System.out.println("Hello");
	    }
	 } 
     class B{
           public void getResult() throws AirthemticExceptio{
             System.out.println("Hi");
	      }
	  }


3) If Parent class throws child exception and subclass throws Exception you will get compile time error

      class A{
         public void getResult() throws IOException{
            System.out.println("HI");
	    }
	 }
      class B{
          public void getResult() throws Exception{
            System.out.println("Hello");
	    }
        }
	
	
4)   Gives Error

     class A{
         public void getResult() throws ArithmeticException{
            System.out.println("HI");
	    }
	 }
      class B{
          public void getResult() throws Exception{
            System.out.println("Hello");
	    }
        }



5) Class A{
     public void getInfo() throws Exception{
          System.out.println("Hello");
	  } 
   Class B extends A{
           public void getInfo()throws ArithmeticException{
           System.out.println("Hi");
	   }
	 }
	 
	 
	 It will work 
	 

===============================================================================================================================================================
===============================================================================================================================================================
3) String
===============================================================================================================================================================
===============================================================================================================================================================


---------------------------------------------------------------------------------------------------------------------------------------
1) Why String are thread safe?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String are immutable in java                                                                                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------
2) What is String ?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String represent squence of character. String is final class present in java.lang package                                                                                                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------
3) Why Java uses concept of String literal?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       When we use object by using to String literal JVM checks whether the object already declared or not                                                                    If declared it doesn't create new object in this way they makes JVM more memeory efficient.

---------------------------------------------------------------------------------------------------------------------------------------
4) What are the method of String?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        1)toUppercase() 2)toLowercase() 3)toCharArray() 4)toCharAt() 5)equals() 6)length() 7)toStrim() 8)                                                                      9)equalIgnorecase() 10) join()   11)subString()  12)IsEmpty() 
---------------------------------------------------------------------------------------------------------------------------------------
5) Is String keyword in java?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        No,String is not keyword in java. String is final class present in java.lang package                                                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------
 6) Is string is primitive or dervied data type?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String is derived data type.                                                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------
 7) What is String constant pool?
---------------------------------------------------------------------------------------------------------------------------------------
String constant pool is special space reserved in heap memeory to store the string objects. When we create obj
without using new keyword it will store in string constant pool                                                                                                       ---------------------------------------------------------------------------------------------------------------------------------------
8) What is special about String objects as compares other objects.
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String objects are created without using new keyword and store in special memory i.e String constant pool,                                                             JVM check whether the objects already  declared or not in this way they make JVM more memory efficient. 
---------------------------------------------------------------------------------------------------------------------------------------
9) What do you mean by mutable and immutable objects?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                Mutable objects means can editable or modify whereas immutable means cannot be modify or editiable.

 for eg - 
1) If you create the object of mutuable class , it will become mutuable object.
@Data
@AllArgsConstructor
@NoArgsConstructor
class Employee{
  private int id;
  private String name;
}

class Test {
public static void main(String args[]){
  Employee employee=new Employee(1,"Harsh");
  System.out.println("Employee object before "+employee);

  employee.setName("Patil")
  
  System.out.println("Employee object after "+empployee);  
 }
}

output - Employee object before Employee [1,"Harsh"]
         Employee object after Employee [1,"Patil"]  


StringBuilder sb=new StringBuilder("Employee Name : ");
sb.append("Harsh");

system.out.println(sb);

output - Employee Name : Harsh

original String get changed here , it is a mutual object



Immutable object ---

String str="Harsh";
str="Patil";
system.out.println(str);

output= patil

here we can't modify the original String value , it is present in memory , we replaced str i.e reference varibale with new value of String.



9) Mutuable class vs Immutable class ? 
---------------------------------------------------------------------------------------------------------------------------------------
1) Mutuable class means once you create the object of class, you can modify the contain of object.
2) Immutable class means once you create the object of class, you can't modify the contain of objec.

Mutuable class means once you instantiate the class or created the object of class , you can able to modify the variables values.

@AllArgsConstructor
@Data
class Emp {
 private int empId;
 private String empName;
}

class Test{
public static void main(String args[]){
 Emp emp=new Emp(1,"Harsh");

 system.out.println("Mutuable class before "+emp);
 
 emp.setName("Patil");

 system.out.println("Mutuable class after "+emp);
}

}

Output -
         Mutuable class before [1,"Harsh"]
         Mutuable class after [1,"Patil"]


Immutable class means those class object will not change once get intiallzied.

@AllArgusConstructor
@Getter
class final Emp {
 private final int empId;
 private final String empName;
}

class Test{
public static void main(String args[]){
 Emp emp=new Emp(1,"Harsh");

 //don't have setter method to modify the object.

 Emp emp1=new Emp(2,"Harsh");
//emp ,emp1 are totally different object, means due to creation of emp1 , it will not affect to
//  emp object.

}
}

---------------------------------------------------------------------------------------------------------------------------------------
10) Which is the final class in between String ,StringBuffer,StringBuilder?
---------------------------------------------------------------------------------------------------------------------------------------
 All three are final classes.

                                                                                                        String                                                        String Buffer                                                                   String Builder                                                                                                                                1) String objects are stored in String constant pool       1)String buffer objects stored in heap memory                 1)String builder objects stores in heap memory                                                                                                        2) String are thread safe                                           2) String buffer is not thread safe                                    2) Stirng builder is thread safe                                                                                                                                3)  String objects are immutable                                  3)String buffer objects are mutable                                3) String builder objects are mutable                                                     
---------------------------------------------------------------------------------------------------------------------------------------
11) Why String buffer and String builder introduced in java there are already exit String class to represent the set of character?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                       When we create object by using string it becomes immtable, we are not able to modify it,If you try yo modify                                                                                                                                                                                  then chances of data losses. That's to make mutable objects StringBuffer and StringBuilder are introduced. 
---------------------------------------------------------------------------------------------------------------------------------------
12) How many objects will be created in the following code?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String s1=new String("abc");                                                                                                                                                                                                                                                                                                     
String s2="abc";                                            
                                                                                                                                                                        String s3="abc";  
                                                                                                                                                                        String s4="abc";  
                                                                                                                                                                        Two objects are created one is stored in heap memory another one is stored in string constant pool


                                                                                                                                                                        String s1=new String("abc");  
                                                                                                                                                                        String s2=new String("abc");
                                                                                                                                                                        String s3="abc";  
                                                                                                                                                                        String s4="abc";   
                                                                                                                                                                        Three objects created, by using new keyword is stored in heap memory whereas by using string lateral it will
                                                                                                                                                                        store in String constant pool
---------------------------------------------------------------------------------------------------------------------------------------
13) How do you create mutable String objects?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        To create mutable string objects we need to use String Buffer and String Builder                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
14) Which one will you prefer among "=="& equals() method to compare two String objects?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        = = equal to operator is used for address comparison wheras equals() method used for content comparison (equals method take only object as input parameter)                                                                                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------
15) Which class will you recommonded among String,String buffer,String builder classes if i want mutable and thread safe objects?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String Buffer and String Builder both are create mutable objects but for String Builder is not thread safe so you can use StringBuffer. 
---------------------------------------------------------------------------------------------------------------------------------------
16) How do you convert given String to char array?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        By using tocharArray() method                                                                                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------
17) What is the difference between String,String buffer and String builder ?
---------------------------------------------------------------------------------------------------------------------------------------
 String                                                    String Buffer                                           String Buider
1)String objects stored in String constant pool  1)String buffer objects stored in heap memory  1)String builder objects stored in heap memory
2)Strign objects are immutable                   2)String buffer objects are mutaable           2)String builder objects are mutable
 3)String are thread safe                        3)Strign buffer is thread safe                  3)String builder is not thread safe                                                                                                                                                                                                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------
18) How many objects will create in the following code ?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                              String s1=new String("abc");                                                                                                                                                                                                                                                                                                     
       String s1="abc";  
                                                                                                                                                                        Two objects created one by using new keyword and another one by uisng String literal.  

                                                                                                                                                                        String s1=new String("abc");  
                                                                                                                                                                        String s2=new String("abc");  
                                                                                                                                                                        Two objects are created both are stored in heap memory
---------------------------------------------------------------------------------------------------------------------------------------
19) Where exactly String constant pool located in the memory?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String constant pool is located inside the heap memory.                                                                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------
20)  I am performaing lots of String concenataions and String modifation in my code, which class among String,String buffer,
     String builder improve the performance of code, remember i also want thread safe code?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                          String and String buffer both are thread safe but lot's of string concationation is not supported in string ie, 
                                                                                                                                                                          you can use String Buffer                                                                                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------
21) What is String intern?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String objects are stores in String constant pool called as String intern                                                                                                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------
22) What is main difference java String and c,c++ String?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        C,C++ String terminated with null whereas java String doesn't terminated with null.                                                                                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------
23) Can we call method using String literal?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Yes we can call method by using String literal.                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
24) Do you have any idea why String have been made immutable in java?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        To make JVM more memory efficient String are immuable in java. when we create object of String by using                                                                String by using String literal JVM check wheather object declared or not.                                                                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------
25) What do you think about String constant pool? Why they have provided this pool as we can Store String objects
    in the heap memory itself?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        When we create object of String by using String literal JVM check whether objects declared or not. If declared                                                          it doesn't create new objects,in this way they make jvm more memory efficient.
---------------------------------------------------------------------------------------------------------------------------------------
26) What is the similarity and difference between String and String buffer class?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        The Similarity between String and String buffer is both are thread safe. And dissimilarity is String objects are 
                                                                                                                                                                        imutable in java whereas String buffer objects are mutable                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
27) What is similarity and diffrence between String Buffer and String Builder?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String Buffer and String builder objects are mutable and main differnce that String Buffer is thread safe                                                              Wheras String Builder objects is not thread safe
---------------------------------------------------------------------------------------------------------------------------------------
28) How can you make String upper case and lower case?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        To make to upper case we will use toUpperCase() method and to make String lower case we can use                                                                       toLowercase() method. 
---------------------------------------------------------------------------------------------------------------------------------------
29) Apart from security concept what are other reason to make String immutable in java?
--------------------------------------------------------------------------------------------------------------------------------------                                  To make jvm more memory efficient java uses concept of String literal.
For eg- suppose five reference variable referes to the one object and i want to chnage one value of them so it may chances of data loses.  
---------------------------------------------------------------------------------------------------------------------------------------
30) Why is it said that the length() method of String class doesn't return accurate
    results?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Because length() method count only number of character from the String.                                                            

31) What is String Buffer?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String buffer is introduced to make mutable objects. When we object by using String buffer it will strore in 
                                                                                                                                                                        heap memeoy. String Buffer is thread safe. Performance of String Buffer is slower than the Strign Builder.
---------------------------------------------------------------------------------------------------------------------------------------
32) What is String  Builder?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        String Builder introduced to make mutable String objects. When we create object by using String builder
                                                                                                                                                                        it will store in heap memory. String Builder is not thread safe. The performane of String Builder is 
                                                                                                                                                                        faster than the String Buffer.  
																				
																				
---------------------------------------------------------------------------------------------------------------------------------------				    
33) What is difference between String and String Buffer?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                                                      String                                    String Buffer
														
		1) String create immutable objects   1) String buffer create mutable objects
		2) String objects strored in String  2)String buffer objects Stored in heap memory.
		constant pool
                3)String overide equal method        3) String buffer can't overide equal method of object class.
		of object class.

---------------------------------------------------------------------------------------------------------------------------------------				    34) What is heap memory and String constant pool?
---------------------------------------------------------------------------------------------------------------------------------------
    heap memeory is runtime data area on which object are allocated. 
    whereas String constant pool located inside the heap memory it mainly used to make jvm more memory efficient, when we create obejct of Strign by using
    String literal jvm check wheather object declared or not,if declared it doesn't create new instance.


=============================================================================================================================================================================================================================================================================================================================================================================================================================================================================================





===============================================================================================================================================================
===============================================================================================================================================================
4)MultiThreading
===============================================================================================================================================================
===============================================================================================================================================================


---------------------------------------------------------------------------------------------------------------------------------------
1) What is multithreading?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Multithreading means execute multiple thread simultaneously at a same time. Mutlthreading is way to achieve multitasking.                                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
2) What is thread?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Thread is light weight subprocess.Thread execute independently. i.e exception occur in single thread doesn't affect in other thread.
---------------------------------------------------------------------------------------------------------------------------------------
3) What is the difference between thread and process?
---------------------------------------------------------------------------------------------------------------------------------------
                               Thread                                                               Process
    1) Thread is light weight subprocess.                                                 1)A program in the execution called as process.
    2)  Thread require shared addrees space memeory                                       2) process require separate address space memory.
    3)  Inter thread communication is faster                                              3) Inter process communication is slower.
    4)   Context swithcing in thread is faster                                            4) Context swithching in process is slower

---------------------------------------------------------------------------------------------------------------------------------------
4) What do you understand by inter threads communication? 
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        The communication between synchronized thread is called as inter thread communication.
                                                                                                                                                                        It is used to avoid thread polling in java.                                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
5) How thread communication happen?
---------------------------------------------------------------------------------------------------------------------------------------
Thread communicate with each other by using notify(),notify all() mehtods . notify meas unblock only one waiting thread ,wheras notifyall() 
means unblock all waiting thread.                                                                                                                                     ---------------------------------------------------------------------------------------------------------------------------------------
6) What is the purpose of wait method?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        wait method is object class method. It is used to pause the currently excecuting thread and wait until another thread will call notify and notify all methods.
---------------------------------------------------------------------------------------------------------------------------------------
7) why must wait method called from the synchronized block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Because synchronization block makes clear proper communication.If you try to use wait method from outside the block it will show an error such as java.lang.illegalmoniter state exception
---------------------------------------------------------------------------------------------------------------------------------------
8) What are the advantages of multithreading? 
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Mulitthreading means execute mutilple thread simultaneously. It is process to achieve multitasking.
                                                                                                                                                                        The advantages of multithreading is
                                                                                                                                                                        1) Thread is lightweight. i.e exception occur in single thread doesn't affect all other thread.
                                                                                                                                                                        2) Thread require shared address space memory
                                                                                                                                                                        3) We can perform mutiple task simultaneously at a same time.
                                                                                                                                                                        4) Inter thread communication cost is slower.                                                                                                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------
9) What is the life cycle of thread?
---------------------------------------------------------------------------------------------------------------------------------------
Life cycle of Thread
1) New - In this state thread object is created. but thread is not live until start() method called.
2) Ruunable-In this state thread is ready to run. but not running until picked from thread scheduler.
3) Running- In this state thread is started running.
4) Waited/Blocked-In this state thread is not running but still live and execute another thread if any available.
5) dead- In this state thread is get died after exisitng the run method.

---------------------------------------------------------------------------------------------------------------------------------------
10) What is the difference between preemptive sheduling and time slicing?
---------------------------------------------------------------------------------------------------------------------------------------
Thread sheduler is part of jvm which decided which thread executed first based on some proriety and other facts.                                                       There are two types of thread sheculer 
1)Preemptive sheduling- Preemptive sheduling means execute high prioriety thread first and wait until another high prioriety thread comes into exisitance.
2)Time slicing -time slicing means time taken by cpu for execution.                                                                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------
11) What is context swithching?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        context switching means time taken by cpu for exceution                                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
12) What is thread class?
---------------------------------------------------------------------------------------------------------------------------------------
thread class is way to achieve thread object. once we extends thread class we are not able to extends other class.                                                     extending thread class means tighlty coupled and it doesn't provide any code reusblity other than copy and paste.                                                      Maintance cost of thread class very high                                                                                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------
13) What is difference between thread class and runable interface for creating thread? or What are the different ways of threads usage?
---------------------------------------------------------------------------------------------------------------------------------------
Thread object is created by using two ways.
1) Thread class( extending thread class)
2) Runnable Interface (implementing runable interface)
                                    Thread class                                                                        Runnable Interface
            1) Once we extends thread class we are not able to extends other class                1) Once we implement runable interface we can extends other class.
            2)  extending thread is tightly copuled                                               2)Implementing runable interface is loosely coupled.
            3)Thread class don't provide any code reusablity other than copy and paste            3)runable interface provide better code reuseability.
            4)Thread class maintanice is high                                                     4)maintance if runable interface is low
            5)Each thread create new object so it require high memory                             5)It has shared address space memory.                                                        
                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------
14) What is user thread?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        User thread means user defined thread. JVM doesn't terminate until user thread get execute.                                                                                                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------
15) What is runable interface?
---------------------------------------------------------------------------------------------------------------------------------------
Runable interface means functional interface , it has only one abstract method, run method . It is also known as single argument method.
---------------------------------------------------------------------------------------------------------------------------------------
16) What does join method?
---------------------------------------------------------------------------------------------------------------------------------------
Join method wait for thread to die.
---------------------------------------------------------------------------------------------------------------------------------------
17) What is the purpose and woking of sleep () method?
---------------------------------------------------------------------------------------------------------------------------------------
Sleep method thread class method. It pause the currently executing thread for specific time and execute another                                                        thread if any available.
---------------------------------------------------------------------------------------------------------------------------------------
18) what is difference between wait() and sleep() method? ######################
---------------------------------------------------------------------------------------------------------------------------------------
       Wait() Method                                                 Sleep() Method
1)  Wait() method is object class method                        1)sleep() method is thread class method                                                              2) wait() method pause the currently exceuting thread           2) sleep() method pause the currently executing thread for specific time and execute another thread if any. and wait until another thread will call notify and notify all 
 method                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------
19) Is it possible to start thread twice?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        No,It's not possible to start thread twice it will show illegalMoniterThreadstateException                                                                                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------
20) Can we call run method instead of start?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Yes, we can run method insted of start but it doesn't behave like thred it behave like normal method                                                                   When we call start() method internally it will call run method
---------------------------------------------------------------------------------------------------------------------------------------
21) What is daemon thread?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Daemon thread means low prioriety thread it used to proivde service and suppport to user. a java program auto
                                                                                                                                                                        matically terminate if there is remains only daemon thread. There are two types of daemon thread
                                                                                                                                                                        1)isDaemon() 2)setDaemon()
---------------------------------------------------------------------------------------------------------------------------------------
22) What is user thread?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        User thread means user defined thread jvm doesn't terminate until user thread get execute.                                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------
23) can we make the user thread as daemon thread if thread is started?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        No we can't make user thread as daemon thread if thread is started it will shows illegalMoniterstateExcpetion                                                                                                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------
24) What is shutdown hook?
---------------------------------------------------------------------------------------------------------------------------------------
Shutdown hook is part of jvm called before the jvm shut down normally or abruptly. It saves the states of jvm.                                                         also it is process of cleaning.
---------------------------------------------------------------------------------------------------------------------------------------
25) When should we interrupt thread?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        When we want break out the state of thread from sleep and wait state then we interrupt the thread                                                                                                                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------
26) What is synchronization? or Why synchronization is neccesary?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Synchronization means capability to access mutiple thread to any shared resource.                                                                                     There are two types of synchronization 
                                                                                                                                                                        1)Synchronization method  
                                                                                                                                                                        2)Synchronization block
                                                                                                                                                                        Adavtangets  of synchronization
                                                                                                                                                                        1) To avoid thread interface
                                                                                                                                                                        2)To avoid constistance problem 
                                                                                                                                                                        The main purpose of synchronization is to make clear and proper communication between the thread.



Synchronization means basically , if multiple trying to access one method at a time , so it will allow to access only
one thread at a time .
1) it will help to avoid data inconsitency , mean you will get proper result.
2) It will avoid data corruption.
 
**********************  **********************  **********************

practically , consider in your project there is one method , and you want to synchorinzation small piece of code of that,
so that time you will go with synchronization block. means if there is another thread is comming or calling the same method a time ,
it will execute the code above the synchronization block , and if there is any thread is alreday present inside the synchronization block.
so the outer thread will wait until the execution of inside the synchronization block.

the synchronization block and method has same purpose then what is the purpose of synchronization block,
what will happen if i use synchronization method instead of synchronization block?
I know if there is small piece of code we go with synchronization block , but what will happen if we put 
method as synchronized ? 
(** reason performane , it is not like that it synchronization will take time to exeute the code, 
    but synchronization will not allow to call it until the execution of first thread is completed.
)
let us consider you have 10 lines of code you want to synchronize 1 and 2 line number or only 8,9 line number of
rest all code will get executed , and rest all multiple thread trying to execute or access the synchronization block, it will
wait until the first thread will finish finish the execution of synchronization block. 




---------------------------------------------------------------------------------------------------------------------------------------
27) What is the purpose of synchronization block?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Synchronization block is used to perform synchronization on specific resoure of that method                                                                            Suppose i have 50 lines of code and i want synchronize five lines of them that time we use synchronization block
                                                                                                                                                                        But if i put all lines of code of method in synchronization block it will behave same as synchronization method
                                                                                                                                                                        The scope of synchronization block is smaller.
---------------------------------------------------------------------------------------------------------------------------------------
28) Can java object locked down for exclusive use by a given thread?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Yes java object locked for execusive use just we put it in synchronization block.                                                                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------
29) What is static synchronization?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        If suppose i applied synchronization before an method means lock an object but suppose i use synchronization 
                                                                                                                                                                        before static method it means lock for an class.
---------------------------------------------------------------------------------------------------------------------------------------
30) What is the difference between notify and notifyAll() method?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Notify and notifyAll() method is used to occur communcation between the to threads.
                                                                                                                                                                         notify() meand unblock only one waiting thread whereas notifyall() means unblock all waiting thread
---------------------------------------------------------------------------------------------------------------------------------------
31) What is deadlock?
---------------------------------------------------------------------------------------------------------------------------------------
Deadlock situation occurs when two process waiting for each other to complete and they wait endlessly.                                                                 ---------------------------------------------------------------------------------------------------------------------------------------
32) How to detect deadlock condition ? and how can you avoid it?
---------------------------------------------------------------------------------------------------------------------------------------
To detect deadlock condition we need to run our code cmd. If dead lock present we will get message.                                                                   To avoid deadlock condition 
1)Avoid unnecessary lock
2)Avoid nested lock
3)Using thread join
---------------------------------------------------------------------------------------------------------------------------------------
33) What is thread sheduler?
---------------------------------------------------------------------------------------------------------------------------------------
Thread scheduler is part of jvm which decides which thread execute first based on some prority and other facts.                                                       Such as time sclining and preemptive sheduling.
Preemptive sheduling means high priority thread execute first and wait until high priority thread comes into exisitance. 
time sclining means time taken by cpu for execution
---------------------------------------------------------------------------------------------------------------------------------------
34) Does each thread has stack in mutlithreaded program?
---------------------------------------------------------------------------------------------------------------------------------------
yes in mutithreaded programming each thread has stack. Beacuse thread are exceute independently                                                                        ---------------------------------------------------------------------------------------------------------------------------------------
35) How safety thread achieved?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                     Safety thread achieved by using following ways 
                                                                                                                                                                        1)Using volatile keyword
                                                                                                                                                                        2)Synchronization
                                                                                                                                                                        3)Automatic wrapper class ( All wrapper classes are final classes in java)
                                                                                                                                                                        4)Using lock based mechanism
---------------------------------------------------------------------------------------------------------------------------------------
36) What is race condition?
---------------------------------------------------------------------------------------------------------------------------------------
Race condition generally occur when mutiple thread execute at a same time                                                                                             To avoid race condition we need to use synchronization.
---------------------------------------------------------------------------------------------------------------------------------------
37) What is volatile keyword is java?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        volatile meas value read from main memory not a specific memory.  
                                                                                                                                                                        Volatile keyword mainly used to achieve safety threads.              
---------------------------------------------------------------------------------------------------------------------------------------
38) What do you understand by thread pool?
---------------------------------------------------------------------------------------------------------------------------------------                               Thread pool is group of waited thread waiting for task to be allocated.
---------------------------------------------------------------------------------------------------------------------------------------
39) what is synchronization block?
-------------------------------------------------------------------------------------------------------------------------------------                                  Synchronization block is used to perform synchronization on specific resource of method. Suppose i have 50 line code i want syncronozed 5 lines of them then i will use synchronization block . The scope of synchronization block is smaller than the sychronization method. 
The main purpose of synchronization is avoid thread constistance and thread interface problems.
---------------------------------------------------------------------------------------------------------------------------------------
40) What are the method of thread?
--------------------------------------------------------------------------------------------------------------------------------------                                    1) start() 2)run() 3)setDaemon() 4)IsDaemon() 5)setPriority() 6)getProority()  7)yeild()  8)join()  9)sleep() 10)currentThread()
   11)run() 12)isAlive() 13)setName() 14)getName()
---------------------------------------------------------------------------------------------------------------------------------------
41) What is pass by value and pass by referecne?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        pass by value means pass eaxct cpoy value if changes occur oroginal value doesn't get changed,
                                                                                                                                                                        pass by reference means pass an refrecne value if changes occur then it afftect in all places.
---------------------------------------------------------------------------------------------------------------------------------------
42) What is difference between synchronization block and synchronization method?
---------------------------------------------------------------------------------------------------------------------------------------
Synchronization means capability to access multiple thread to any shared resources.
Synchronization mainly used to avoid thread interface and consistance problem. 
Synchronization method is used to perform synchronization on complete resource whereas Synchronization block is used to perform synchronization
on specific resource of method. suppose i have 50 lines of code and i want to synchronize 5 lines of them then i will use synchronization block.
The scope of synchronization block is smaller than the synchronization method,but i put all lines of synchronzation method used the synchronization
method it will work as same.
																			
---------------------------------------------------------------------------------------------------------------------------------------
43) What is deadlock?
---------------------------------------------------------------------------------------------------------------------------------------
Deadlock is situation occur when two process waiting for each other to complete and wait endlessly.
---------------------------------------------------------------------------------------------------------------------------------------
44) What is maker interface and it's use and can we create our own marker interface?
---------------------------------------------------------------------------------------------------------------------------------------
Marker interface meas empty interface. It doesn't have field and method. It is called as tagiing interface
maker interface proivde hint to jvm i.r we are implemting some important feature.
                                                                                                                                                                       It is used to mark capabaility of class while impleemnting interface at runtime. 
                                                                                                                                                                       yes we can create our own marker interface just create an interface and don't write anything inside it.
                                                                                                                                                                       1) serilizable,clonable,remote are the marker interface.
---------------------------------------------------------------------------------------------------------------------------------------
45) How to create immutable class in java and example?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        TO make immutable class in java we need to make class is final and all member of class is final,and private
                                                                                                                                                                        Use only getter method.

                             final class Student{
                                                 private final int id;
                                                 private final String name;
                                                 
                                                  Student(){
                                                                 }
                                                  Student(int id,String name){
                                                                 this.id=id;
                                                                 this.name=name;
                                                                     }
                                                   public int getId(){
                                                     return id;
                                                                     }
                                                  public String getName(){
                                                     return name;
                                                                    }
                                                     public static void main(String args[]){
                                                           Student student=new Student(101,"Harsh");
                                                          System.out.println(student.getId()+","+student.getName());
                                                               }
                                                  }
---------------------------------------------------------------------------------------------------------------------------------------
46) What is singleton class and example?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                        Singleton class is used to restrict the user from creating object of that class. To make class singleton we need 
                                                                                                                                                                         make constructor private,so we are not able to crete object of that class. Only one object of that is created 
  due to it's class defination.
  
  Once we make constructor is private we can access object within the class only.
                  class Singleton{
                            public static Singleton singleton=null;
                            private Singleton(){
                             }
                           public static Singleton getInstance(){
                               if(singleton=null){
                                 singleton=new Singleton();
                                 }
                             return singleton;
                          }
                  public static void main(String args[]){
                        Singlton s1=getInstance();
                        System.out.println(s1.hashcode);
                        Singleton s2=getInstance();
                        System.out.println(s2.hashcode);
                        }

}

However times you try to create the object you will get same hashcode.
---------------------------------------------------------------------------------------------------------------------------------------
47) What is the difference between join and wait method?
---------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                               Join method wait for thread to die. wherease wait method is object class method which pause the currenlty executing thread and wait until another 
thread will call notify and notifyAll() methods.

---------------------------------------------------------------------------------------------------------------------------------------
48) Who calls the run method?
---------------------------------------------------------------------------------------------------------------------------------------
 once we called the start method it internally calls the run method.
 
 ---------------------------------------------------------------------------------------------------------------------------------------
49) What is object and class level lock?
---------------------------------------------------------------------------------------------------------------------------------------
 if we put synchronization before a method lock for an object whereas i we put snchronization before a static method means lock for a class.
---------------------------------------------------------------------------------------------------------------------------------------
50) What is process?
---------------------------------------------------------------------------------------------------------------------------------------
 Process means a program in the execution.Every process have their own memory space.
---------------------------------------------------------------------------------------------------------------------------------------
51) What are the different types of multitasking? ######################
---------------------------------------------------------------------------------------------------------------------------------------
 1) Process based multitasking 2) Thread based multitasking
---------------------------------------------------------------------------------------------------------------------------------------
52) Explain about main thread in java?
---------------------------------------------------------------------------------------------------------------------------------------
main thread is first thread it starts immediately after program is started.
---------------------------------------------------------------------------------------------------------------------------------------
53) Explain about main thread in java?
---------------------------------------------------------------------------------------------------------------------------------------
main thread is first thread it starts immediately after program is started.
---------------------------------------------------------------------------------------------------------------------------------------
54) Which is the best approach for creating thread ? 
---------------------------------------------------------------------------------------------------------------------------------------
 Thread is created by using two ways
 1) extending a thread class
 2) implementing runable interface
 
 but implement runable interface is best approch to create thread object. becuase if you create thread by extending thread class
 we are not able to extends other class,maintaince cost is high becuase extending thread class means tightly coupled.
 whereas implementing runable interface means loosely copuled, we can extends another class also and maintaince cost is also low, and it
 provide better code reusablity.
---------------------------------------------------------------------------------------------------------------------------------------
 55) Can we restart a dead thread in java? ######################
---------------------------------------------------------------------------------------------------------------------------------------
 No we can't restart dead thread in java if you try it will show runtime exception i.e thread is not live.
---------------------------------------------------------------------------------------------------------------------------------------
 56) Can one thread block the other thread?
---------------------------------------------------------------------------------------------------------------------------------------
 no, one thread can't block another thread.
---------------------------------------------------------------------------------------------------------------------------------------
 57) Can we overload run() method in java?
---------------------------------------------------------------------------------------------------------------------------------------
 Yes we can overload the run() method in java ,but start method call run() method with no arguments.
---------------------------------------------------------------------------------------------------------------------------------------
 58) What is a lock or purpose of locks in java? ######################
---------------------------------------------------------------------------------------------------------------------------------------
 lock is an moniter used to prevent access of multiple thread to any shared resource.
---------------------------------------------------------------------------------------------------------------------------------------
 59) In how many ways we can do synchronization in java?
 ---------------------------------------------------------------------------------------------------------------------------------------
There are two ways to synchronization 
1) Synchronization block
2) Synchronization method
 ---------------------------------------------------------------------------------------------------------------------------------------
 60) What are synchronized methods?
 ---------------------------------------------------------------------------------------------------------------------------------------
 Synchronized means capability to access multiple thread to any shared resources.
 It mainly used to avoid thread interface and consistance problem.
 Synchronized method is used to avoid thread interface because mutiple thread access method at a time.
 ---------------------------------------------------------------------------------------------------------------------------------------
 61) When do we use synchronized methods in java?
 ---------------------------------------------------------------------------------------------------------------------------------------
 IF you want to lock full object then we will use synchronization block.
 If multiple thread tries to access method so to avoid thread interface or consistance problem we need to use synchronization method.
 It makes clear and proper communication between the thread.
 ---------------------------------------------------------------------------------------------------------------------------------------
 62) Can we use synchronized block for primitives?
 ---------------------------------------------------------------------------------------------------------------------------------------
 No, we can't use synchronized block for primitive we can use only for objects.
 ---------------------------------------------------------------------------------------------------------------------------------------
 63) Explain different types of thread priorities ?
 ---------------------------------------------------------------------------------------------------------------------------------------
  Thread priorities decidesc when to execute thread 
  1) min priority -1
  2) Norm priority -5
  3) max priority -10
 ---------------------------------------------------------------------------------------------------------------------------------------
  64) How to change the priority of thread or how to set priority of thread?
 ---------------------------------------------------------------------------------------------------------------------------------------
  By using setPriority method we can set priority of thread
 ---------------------------------------------------------------------------------------------------------------------------------------
  65) If two threads have same priority which thread will be executed first ?
 ---------------------------------------------------------------------------------------------------------------------------------------
    we don't give garranty which thread is exceute
    either it execute any thread first nor it will give equal opporutunity.
 --------------------------------------------------------------------------------------------------------------------------------------- 
 66) What all methods are used to prevent thread execution ? ////////////////////////////
 ---------------------------------------------------------------------------------------------------------------------------------------
 1) join() -   WAIT FOR THRAD TO DIE
 2) sleep() -  SLEEP THE CURRENTLY EXECUTING THREAD FOR WAIT SPECIFC TIME AND EXECUTE IF ANY AVIABLE.
 3) yeild() -  YEILD METHOD IS USED TO RESTRICT THE USER FROM GETTING WAIT AND SLEEP STATE IT DIRECLTY PUSH TO RUNNNABLE STATE. 
 ---------------------------------------------------------------------------------------------------------------------------------------
 67) When yield () method in thread is executed it?
 ---------------------------------------------------------------------------------------------------------------------------------------
 yeild() method restrict thread going to wait,sleep and block state. It direclty push it into runnable stage.
 
 Yeild() method is static method of thread class, it direclty push thread state from runable to running.
 ---------------------------------------------------------------------------------------------------------------------------------------
 68) Assume a thread has lock on it, calling sleep() method on that thread will release the 
	 lock?
 ---------------------------------------------------------------------------------------------------------------------------------------
  sleep() method doesn't realease the lock that thread sleep for the specify time.
  ---------------------------------------------------------------------------------------------------------------------------------------
 69) Can sleep() method causes another thread to sleep?
 ---------------------------------------------------------------------------------------------------------------------------------------
  No sleep() method cause only current thread no any other.
  ---------------------------------------------------------------------------------------------------------------------------------------
 70) Explain about interrupt() thread?
  ---------------------------------------------------------------------------------------------------------------------------------------
  when we want to break out the wait and sleep position of thread we interrupt a thread.But it doesn't mean to stop immediatelty ,it polite way
  to request.
  ---------------------------------------------------------------------------------------------------------------------------------------
  71) Explain about interthread communication and how it takes place in java?
  ---------------------------------------------------------------------------------------------------------------------------------------
 Interthread communication happpens by using 
 1) wait() 
 2) notify()Explain wait(), notify() and notifyAll() methods of object class ?Explain wait(), notify() and notifyAll() methods of object class ?
 3) notifyAll()
  ---------------------------------------------------------------------------------------------------------------------------------------
  72) Explain wait(), notify() and notifyAll() methods of object class ?
  ---------------------------------------------------------------------------------------------------------------------------------------
  wait () ,notify,notifyAll() are object class methods.
  wait() - pause the currently executing thread,wait until another thread will call notify and notifyAll() method.
  notify()- notify means unblock only one waiting thread
  notifyAll() - notifyAll means unblock all waiting thread.
  In java each object has a only one lock or monitor. And wait, notify and notifyAll() methods act as monitor.
  That's why wait, notify, notifyAll are object class methods.
  ---------------------------------------------------------------------------------------------------------------------------------------
  73) Explain why wait(),notify() and notifyAll() methods are in Object class rather than in 
      thread class?
  ---------------------------------------------------------------------------------------------------------------------------------------
  because wait(),notify(),notifyAll() methods are object level methods and these called on same objects.
  ---------------------------------------------------------------------------------------------------------------------------------------
  74) Explain IllegalMonitorStateException and when it will be thrown?  
 ---------------------------------------------------------------------------------------------------------------------------------------
   If you try to write wait ,notify,notifyAll() methods out the side synchrinzation context at runtime you will get IllegelMonitorStateException.
  ---------------------------------------------------------------------------------------------------------------------------------------
  75) when wait(), notify(), notifyAll() methods are called does it releases the lock or holds 
    the acquired lock?
  ---------------------------------------------------------------------------------------------------------------------------------------
 wait() ,notify(),notifyAll() methods are called from synchronization block. If try to call or write outside the synchrnonization block it
 will show illegal monitor state exception. when these method called it will release the lock.
 ---------------------------------------------------------------------------------------------------------------------------------------
  76) Explain which of the following methods releases the lock when yield(), 
      join(),sleep(),wait(),notify(), notifyAll() methods are executed?
 ---------------------------------------------------------------------------------------------------------------------------------------
 1) yeild() -No (the main purpose of yield method to restrict the thread going into wait,sleep or block state.It direclty push into runable state.
 2) join() -No ( join method wait for thread to die)
 3) sleep()- No( pause the cureenlty executing thread)
 4) wait() - Yes( pause the currently executing thread or wait until another thread will call notify() ,notifyAll() methods.
 5) notify() - Yes(unblock only one waiting thread)
 6) notifyAll() - Yes( unblock all waiting thread)
---------------------------------------------------------------------------------------------------------------------------------------
 77) What are daemon threads in java? and How to make a non daemon thread as daemon? and How to make a non daemon thread as daemon?
---------------------------------------------------------------------------------------------------------------------------------------
daemon thread is low priority thread, it maily used to support to user thread. JVM will automatically terminate if there is only remaning daemon
thread. Yes we call call make non Daemon thread as daemon thread by using setDaemon() method. just write this method before start() method , if you write
after the start method it will show IllegalMonitorStateException.
No we can't make main thread as daemon thread.

---------------------------------------------------------------------------------------------------------------------------------------
78) Importance about Thread class.
---------------------------------------------------------------------------------------------------------------------------------------
Thread class is static 
---------------------------------------------------------------------------------------------------------------------------------------
79) What is the difference between Runable and callable interface?
---------------------------------------------------------------------------------------------------------------------------------------
Runable Interface                      Callable Interface
1) Runable interface                  1)callable interface found is 
found is java.lang package            java.util.concurrent package.
2) Runable interface we               2) In collable interface we need
   need to overide the                   to overide the call()
   run() method.                         method.
3) Runable interface is              3) callable interface can throw
   can't throw                          checked exception.
   checked exception.
   
 80) What is the difference between fail fast and fail safe?
 ---------------------------------------------------------------------------------------------------------------------------------------
               Fail fast                                                                       Fail safe
1) Fail fast means immediately throw concurrent throw        1) Fail safe means it doesn't throw concurrent modification
   cocurrent modification Exception.                            Exception.
2) Fail fast doesn't occupies space in memory                2) Fail fast means occupies space in memory.

81) What is means by thread executor?
 ---------------------------------------------------------------------------------------------------------------------------------------
 Thread executor is an interface allows to execute taks on thread asynchrnounsly.
    
82) What is need of thread?
---------------------------------------------------------------------------------------------------------------------------------------
To perfom operations parallely we require thread.

83) Synchronization basic concepts?
---------------------------------------------------------------------------------------------------------------------------------------
synchronized int getSum(int a1,int a2, int a3){
cell1= a1;
sleepforsometime();
cell2= a2;
sleepforsometime();
cell3= a3;
sleepforsometime();
return cell1+cell2+cell3;
}

Once you make method is synchronized only one thread access it at time. wait another thread.

84) What is the best or practial way to start a thread by setting name?
-----------------------------------------------------------------------------------------------------------------------------------------
Date date=new Date();
TimeStamp timeStamp=new TimeStamp(date.getTime());
Thread.currentThread().setName("ClassName-"+timeStamp.getTime()+"-Thread")





----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------
                                                                           Collection
----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------

1) What is Collection?
---------------------------------------------------------------------------------------------------------------------------------------------------------------
  Collection is framework that provide an architecuture to store and manipulate the group of objects.

2) What is collections?
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Collections is class which provides method such as sort and synchronized ,max,min,addALL etc.
  
3) What is collection framework?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Collection framework is combination of classes and interface. Interface such as list,set,map,queue. Classes such as arraylist,linkedlist,Hashset,treeset etc.

4) Explain Internal Working of ArrayList With Examples?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  ArrayList internally uses dyanamic array.Arraylist allows to us to store both homogenous and non homogenoues element. Arraylist support only objects not primitive 
  data type. Arraylist provide random acceess. ArrayList maintain insertion order and allows duplicate values. ArrayList require less space because it store only
  object not address.
  When we create object of arraylist inside the memory a dyanamic array is created with default capacity is 10 and load factor is 0.75 .
  It consider the capacity such = Initialsize* loadfactor.
  Ex-
  Class Employee{
   public static void main(String args[]){
   List<String> list=new ArrayList<String>():
   list.add("Harsh");
   list.add("PAtil");
   list.add("vaish");
   list.add("Taral");
   list.add("Shreya");
   list.add("Shirke");
   list.add("Shruti");
   list.add("Kore");
   list.add("Roy");
   list.add("Peeter");
   
   list.forEach(System.out::println);
   // Now suppose i have added 10 element so it will store in the memory but i want to add one more element we know that arraylist size dyanamically increase.
   so size of arraylist become become 16 
   
   list.add("Joy");
   list.forEach(System.out::println);
   //New dyanamic array is created i.e capacity is 16 and previous get copy by using arrays.copy() method and it will store in new dyanamic array and previous array
   get garbage collected. suppose i want to remvove one element by using remove method
   
   list.remove("peeter");
   list.forEach(System.out::println);
    // But size of dyanamic array is not decrease they remain same this is main disadvantage of dyanamic array.we need to externally use toTrim() size method.
   ArrayList Provide random access so we can access any value by it's index.
   So arraylist mainly used for searching operation. we are not able to perform insertion and deletion operation in an arraylist because lot's shifting is required. 
   
      
      
    List<String> list=new ArrayList<>(10);
    It become fixed sized of lists.
      
      
5) Explain Internal Working of LinkedList with examples?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

  When we create object on linkedlist inside the memory doubly linked list is created.
  LinkedList<String> list=new LinkedList<String>();
  list.add("Harsh");
  we know that the doubly linked list means
  [ Previous connnection node][ Stored element ][Next connecting node]
  This is format of double linked list. Doubly linked list require more space because it store object with there address. Also it doesn't maintain insertion order.
  [P][HARSH][N] inside the memory getstored.
  Now suppose i have add two more object so 
  such as
  list.add("Vaish");
  list.add("Taral");
  annother doubled list get created Suppose three object means node A,B and C
  previous connnectin node of B connected to the next connection of node A ,
  and previous connection of node c connected to the next connection of node B. 
  [][][]---[][][]---[][][]
  suppose we want to one element by using remove method
  list.remove("Taral");
  so simple node will get remove and at the time of adding simply node will added. 
  for this linkedlist good for insertion and deletion opearation. Linked list doesn't random access also doesn't maintain insertion order. 


6) Explain Internal working of HashSet with examples?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  HashSet allow only unique values. Hashset internally uses hashmap. Hashset doesn't maintain any insertion order. It allow only one null value.
  Hashset is synchronized and thread safe.
  When we create the object of hashset suppose
  HashSet<Integer> set=new HashSet<Integer>();
  set.add(10);
  set.add(20);
  set.add(20);
  set.add(30);  
  and add element by using add method, add internally calls put method of hashmap.
  So inside the memory table is created with default capacity is 16 and load factor is .75.
  put method first calculate hashcode.i.e hashcode return us The index value or integer value.
  suppose hashcode return 7 value so element store in seven index as a double list format.
  whatever values we are passing it act as key and value act as present suppose a value is already present it will
  return present otherwise null so in this way they avoid duplicate values.
  Sometimes we will get some index value that time hashcollosion will occur and equal method get override to check contain equal or not.
  If contain is equal then they get overide otherwise new doubly linked list created connceted to previous one.


--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Size of hashmap....

 Map<String,Integer> map= new HashMap<String,Integer>();
 map.put("Harsh",101);
 map.put("Vinay",131);
 map.put("Harsh",141);
 
 map.size();
 
 output = 2
 
 

7) Explain Internal working of HashMap with examples?
----------------------------------------------------------------------------------------------------------------------------------------
  HashMap represent key,value pair. 
  Hashmap allows only one null key , and n number of null values 
  Hashmap is non-synchronized and non thread safe. (By default hashmap is non thread safe , means it is not a good to access 
  hashmap by multiple threads at a time , it will give you incosistance result of may be data corruption or etcc. sol - you need use 
  synchronization for that to avoid this kind of stuff, synchronization means only one thread will access at a time so it will avoid 
  inconstitency of result.)
  Hashmap allows duplicate values but only unique keys.
  By default hashmap is good for singlesided thread environment. 
  If you try to access hashmap in mutlithread env you will get inconsistent result , so avoid this you need
  to use synchronization.

  {once your memeory or table sized filled upto 12 it will increase the the size of table)
  (0.75*16=12)
  If you are using custom class object key then you need to overide the equals and hashcode() method.
  If you are using primitive type , wrapper class / immutable classes then you don't need to or necessary to overide 
  equals and hashcode method.
  equals() method only get called if there is hashcode is getting similar , otherwise it won't get called.
  
  for eg - 
  HashMap<Integer,String> map=new HashMap<Integer,String>();
  When we create the object of HashMap inside the memory table is created with default capacity is 16 and load factor is .75.
 
  map.put(101,"Smith");
  map.put(102,"Sagar");
  
  so put method first calculate the hashcode,
  hashcode return us the index value or integer value it generated by hashing algorithm.
  hashcode is calculated based on the key contain. 
  Suppose it will return index value 7 so the element stored as double linked list format.
  Each row of table called as bucket.
  Sometime hashcode return us same index value that time hashcollision will occur.
  equals() method is getting used to check wheather key contain is same or not , if yes it is a same then it will
  overide the existing value, with new value against that key.
   If contain is equal then double linked get overide
  if the contain isn't equal then another double linked list get created and connected to first one.
  HashMap extends  abstract class.
  
  If you ADDED MORE THAN ONE NULL KEYS IT WILL STARTED REPLACING.IT STORED IT IN ZEROTH INDEX.
  map.put(null,"Sagar");
  map.put(null,"Sagar");

  Note - In java 1.8 instead of doubly linked list they replaced as binary tree.

  for eg - Iteration of Hashmap in java
  
  public class Employee{

  public static void main(String args[]){
      Map<Integer,String> map=new HashMap<Integer,String>();
             map.put(101,"Smith");
	     map.put(102,"Jonh");
	     map.put(101,"Danny");
	     
	     System.out.println(map.size());
	     
	     for(Map.Entry e: map.entrySet()){
              System.out.println(e);
	       }
	  }
	  
 }

output= 2
        102=Jonh
	101=Danny



8)Explain the difference between array and collection?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
               
               Array                                                                            Collection  
1)Array Supports both primitive data type and objets.                     1)Collection support only primitive data type not objects.
2)Array don't have generic feature.                                       2)Collection has generic feature.
3)Array hold only homogenoues data type.                                  3)Collection hold both homogenoues and hetrogenoes data type
4)Array perfoms faster than collections                                   4)Collection performaance slower than the array



9)Explain various interfaces used in collection framework?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  1) Collection interface
     Collection interface is primary interface. It extedns iterable interface.
   
  2) List Interface
     List interface extends collection interface. list interface allows duplicate values and provide random access.
  
  3) Set Interface
     set interface allows only unique values.set interface extends collection interface.
   
  4) Map interface
     map interface represents key,value pair. Map interface extends collection interface
  
  5) Queue interface
     queue interface extends collection interface. queue interface follow first in first out manner.
  
  6) Deque interface
     Deque interface extends queue interface, which is used to perfom insert or remove operation on block wait until operations are performed.

10) Explain the difference between ArrayList and Vector?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   ArrayList                                                    Vector
 1)ArrayList is non legacy class.          1)Vector is legacy class.
 2)ArrayList is non synchronized           2)Vector is synchronized.
 3)ArrayList is not thread safe            3)Vector is thread safe
 4)Arraylist internally uses dyanamic      4)Vector internally uses double linked list.
  array
 

11) What is the difference between arraylist and linkedlist?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
             ArrayList                                LinkedList
  1)ArrayList internally uses dyanamic array      1)LinkedList internally uses doubly linked list.
  2)Arraylist provide random access               2)linkedlist doesn't provide random access.
  3)Arraylist maintain insertion order            3)linkedlist doesn't maintain insertion order.
  4)Arraylist require less space because it       4)linkedlist require more space because it strores object with their address.
   stroes only object.
  5)ArrayList maily used for searching operation  5)Linked list used for insertion and deletion operations.
 

12) What is the difference between Iterator and listIterator?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
             Iterator                                     ListIterator
 1)Iterator is used to perform reverese operation   1)ListIterator is used to perform insert,remove operation while travesing the element.
     while traversing the element.
 2)Iterator traverse only forword direction         2)ListIterator traverse both forward and reverese direction.
 3)Iteraor is used in list,set,map                  3)ListIterator is used in only list.

13) What is the difference between Iterator and Enumeration?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                Iterator                                                                         Enumeration
  1)Iterator is used to perform remove operation while traversing           1)Enumeration is used to perform travesion operation over the element.
    the element 
  2)Iterator support both legacy and non legacy element                     2)Enumeration support only legacy element.
  3)Iterator fails fastly so it doesn't require any                         3)Enumeration fails slowly.
    extra space in a memory


14) What is the difference between List and Set? ///////////////////////////////
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
              List                                                                                  Set
  1)list allows duplicate values                                            1)Set doesn't allow duplicate values
  2)List provide random access                                              2)Set doesn't provide random access
  3)List allow n no null values                                             3)Set doesn't allow null values.
  4)List manitain insertion order                                           4)Set doesn't maitain insertion order
  5)List has one legacy class vector                                        5)Set doesn't have a legacy class. 


15) What is the difference between HashSet and TreeSet? /////////////////////////////
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                         HashSet                                                       TreeSet
  1)Hashset doesn't maintain any insertion order                         1)Treeset maintain ascending order
  2)HashSet implememts hashtables                                        2)Treeset implements tree structure.
  3)Hashset performs is faster than treeset                              3) Treeset performs is slower than the hashset
  4)Hashset allows only one null values                                  5)Treeset doesn't allow null values.
  5)Hashset backed by hashmap                                            5)Treeset backed by Treemap.
  
16) What is the diffrence between Set and Map? /////////////////
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 Set                                                                 Map
  1)Set has only one value                                        1)Map has one value and one key
  2)Set allows only unique values                                 2)Map allows unique key and duplicate values
  3)Set allows only one null value                                3)Map allows no. of null values
  4) set is synchronized                                          4) Map is non synchrinized 

17) What is the difference between HashSet and HashMap?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
               HashSet                                                              HashMap
   1)Hashset has only one values                                  1) Hashmap represent one values and one key
   2)Hashset allows only unique values                            2)Hashmap allows unique keys but duplicate values
   3)Hashset allows only one null values                          3)Hashmap allows number of null values. 
   4)Hashset is thread safe                                       4)Hashmap is non thread safe
   5)Hashset is synchronozed                                      5)Hashmap is non synchronized.

18) What is the difference between HashMap and TreeMap? //////////////////////////////////
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
             HashMap                                                                 TreeMap
  1) HashMap allows n no. of null valeus                         1)Treemap doesn't allows null values
  2)Hashmap doesn't maintain any insertion order                 2)Treemap maintaion insertion order
  3)Hashmap require less time as compared to treemap             3)Treemap required more time.
  4)Hashmap implements hashtables                                4)Treemap implements treestructure
  5)Hashmap sorted by keys and value both.                       6)Treemap shorted by only keys.

19) What is the difference between HashMap and Hashtable?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                     HashMap                                                 HashTable
  1)Hashmap is non sychronized                                   1)Hashtable is synchronized
  2)Hashmap is non thread safe                                   2)Hashtable is thread safe
  3)Hashmap extends  abstract class                              3)Hashtable extends  dictionary class.
  4)Hashmap allows number of null values                         4)Hashtable doesn't allows null values.
  5) Hashmap is non legacy                                       5) Hashtable is legacy.

20) What is the difference between Collection and Collections?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    Collection                                              Collections
  1)Collection is an interface                                    1)Collecctions is a class
  2)Collection provide data stucture such list,                   2)Collections provide methods such as short(),synchronized() ,min(),max()etc.
   set,map or etc          

21) What is difference between Comparable and Comparator?
               Comparable                                                     Comparator
----------------------------------------------------------------------------------------------------------------------------------------
  1)Comparable provide compare To method for comparasion              1)Comparator provide compare method for comparision.
  2)Copmarable compare with own objects                               2)Comparator compare with two different objects.
  3)Comparable found in java.lang package                             3)Comparator found is java.util package
  4)Comparable provide only one short                                 4)Copmarator provide multiple sort of sequence
  5)Comparable is getting used when you want natural                  5) Comparator is getting used when you want custom order 
    Order of sequnce.                                                     of objet sequnce.
  6) It will provide only one sort of sequence means ,                6) It iwll provide multiple sort of sequence means , if you have 
     suppose you have three attribute in your pojo class,                class has three new attribute id, name and address,
     id, name and address.                                               you can sort over it.
     so you can use only one to sort it.

   Ex 1) Employee for Comparable order by empId;
   Ex 2) Employee for Comparator order by empName;
   
   
   1) Comparable provide only one sort of sequence
   
      class Employee implements Comparable<Employee>{
          private int id;
          private String name;
      
                 public Employee(int id,String name){
		             this.id=id;
			     this.name=name;
			     }
	         public void setId(int id){
		        thid.id=id;
			}
	         public void setName(String name){
		        this.name=name;
			}
	         public int getId(){
		         return id;
			 }
	         public String getName(){
		         return name;
			 }
                @override	
	        public String toString(){
		    return " id : "+id+" name: "+name;
		    }
	 

           public int compareTo(Employee e){
	   
	         if(e.getId()>this.getId()){
                       return 1;
		       }
		 if(e.getId()<this.getId()){
		       return -1;
		       }
		 return 0;
		 
        }
	
	class Test{
            public static void main(String args[]){
	         List<Employee> empLists=new ArrayList<Employee>();
		    empLists.add(new Employee(101,"Smith");
		    empLists.add(new Employee(11,"Roy");
		    empLists.add(new Employee(20,"Danny");
		    empLists.add(new Employee(121,"David");
		    
		    Comparator<Employee> emp=Comparator.comparing(Employee::getId);
		    Collections.sort(empLists,emp);
		    for(Employee sortedEmp:empLists){
		    System.out.println(sortedEmp);
		    }
	      }
	
	}
	
	
	
	2) Comparator
	    

22) What do you understand by blocking queue? and why we used?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Blocking is an interface which implements queue interface. The implementation of blocking queue is thread safe.
   The main purpose of blocking queue is due to operation such as insert,remove inside the block or wait util operation are not done.
   
23) Why we overide equals() method? ***equals method take object as input parameter.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Hashcode return us index values or integer value based on hashing algorithim. Sometime we will get same index value that time hashcollision will occur and equlas     method get override to
  check contains equal or not.

24) How to snychronized list,set and Map?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   To synchronized list we use synchronized.list() method 
    for set synchronized.set() method
    for map synchronized.map() method

25) What are the advanatages of generic collection? //////////////////////////////////////
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  1) When we use generic collection we don't need to typecasting. It is type safe and checked at compile time.

26) What is Hash Collision in Hash Table? and How to prevent it?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  1) In hashtable put method first calculate hashcode,hashcode return us index value or integer value based on hashing alogorithm.
     So some times so we will get same index value that time
     has collision will occur to check contain equal or not. 
     By using separate chaining and open addressing.

27) What is dictionary class?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Dictionary class provides capability to store the key value pair   

28) What is default size of load factor in hashing based collection?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Default size is 16 and load factor is 0.75  
   
   Load factor decided when to increse the size of table.
   
   It knows the to increase the size by formaula such as= intial capacity* load factor= 16*0.75=12

29) What do you understand by fail fast?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Fail fast means immediately show concurrent modification expection.It doesn't require any extra space in memory.
   Suppose in arraylist you are performing add or remove operations underlying of anything we will get concurrent modification exception.

30) What is diffrence between Array And ArrayList?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        Array                                                               ArrayList
 1)Array is fixed in size                                               1)Arraylist is growable in size
 2)Array supports both primitive data type and objects                  2)Arraylist support only objects.
 3)Array is used to store only homogenoues element                      3)ArrayList is used to store both homogenoues and hetrogenoues elements
 4)Array performs faster than the arraylist                             4)arraylist performs slower than the array
 5)Array doesn't have generice feature                                  5)Arraylist have generic ferure

31) What is the difference between length of array and size of array?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   If you want to measure length of array we use length() property but length property is not supported arrayList so we need to use size method.

32) How to convert ArrayList to Array and Array to ArrayList?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  To convert arraylist to array we need to use toarray() method and convert array to arraylist we need to use asList() method.


Arrays.asList() size of array become get fixed, so we are not able to add more element.

33) How to make java arrayList read only?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   To make java arraylist read only we need to use Collections class collections.unmodificable() method

34) How to remove duplicate from ArrayList?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   We can use hashset or linkedhashSet or Treeset

35) How to reverse arrayList?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   By using revere() method of collections class , inside this method we pass lists.
   Collections.reverse(list)

36) How to short arrayList in desending order?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 first we need to sort arraylist by using Collections.sort() method after that we will use Collections.reverse()method we pass lists inside that


37) How to synchronized arrayList?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  By using synchrnizedlist() method 
  Collections.sychronizedlist() method
  We need to pass lists inside this method

38) When we use ArrayList vs LinkedList?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  ArrayList mainly used for searching operation because it provide random access where as linkedlist is used for insertion and deletion operation because simple 
  node will get create and delete.
  
39) What is time complexity of arraylist and linkedlist? which one is faster?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    LinkedList is faster than the arraylist for insertion and deletion operations. 
    The time complexity of arraylist for insertion is o(1) ,remove o(n),get o(1) whereas the time complexity for linkedlist is insertion is o(1),remove o(n),get o(n)  

40) If we remove the element from arraylist (if i use enhanced for loop) at the time iterating it will show concurrent Modification exception?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Yes if you are using enhanced for loop and try to remove element form that loop so, we will get the concurrentModification Exception.
  To avoid this type of error we need to use Iterator.

 // If you are using arraylist and try to use the methods such as add or remove underlying of any methods
    so you will get concurrent modification exception.
    
    To avoid this you need to use iterator.


41) What is generic?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   generic means parameterized type. It is type safe checked at compile time. we don't need to do typecasting.It represented by angular bracket <>.
   
42) What is differnce between hashmap and linkedhashmap?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                       HashMap                                                      LinkedHashMap
 1) HashMap doesn't maintain any insertion order                      1) Linked hashmap maintain insertion order of keys.
 2) HashMap require less memeory as compare to                        2) LinkedHashMap reuire more memory due to maintaing the order.
    linked hashmap

43) What is differnce between hashmap and HashTable?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                       HashMap                                                      HashTable
 1) HashMap is non synchronized                                         1) Hashtable is synchronied
 2) HashMap is non thread safe                                          2) HashTable is thread safe.
 3) Hashmap is non legacy class                                         3) Hashtable is legacy
 4) Hashmap allows n. number of null values                             4) Hashtable doesn't allows null values as well as keys. 
 and only one null keys
 
 44) What is differnce between Treemap and hashtable?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                       TreeMap                                                  HashTable
 1) TreeMap is non synchronized                                       1) HashTable is synchronied
 2) TreeMap is not thread safe                                        2) HashTable is thread safe
 3) Tree is non legacy class                                          3) Hashtable is legacy class
 
 45) What are the collections class methods?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) addAll() 2) max() 3) min() 4) sort()

46) What is the difference between equals() and compareTo() method?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
equlas take input parameter as only objects whereas compareTo method take only string.

47) How to remove User-defined class objects in Java ArrayList with example?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

48) Write code for Hashmap and explain everything?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
     Hashmap represent key,value pair. They allow unique keys and duplicate value. Hashmap is non synchronized and non thread safe.
     It allows n no. of null values. It implements abstract class.
     When we create the object of hashmap
     Map<Integer,String> map=new HashMap<Integer,String>();
     Inside the memeory a table is created with default capacity is 16 and load factor is 0.75.
     Each row is called as bucket.
     Now i will add element into it by using put method.
      
     map.put(101,"Smith);
     map.put(102,"Jonh");
     map.put(103,"Sandy");
      
     so, put first calculate the hashcode.
     Hashcode return us the index value or integer values based on hashing alogorithm.
     Whatever we passing it stored in doubly linked list.
     Suppose we will get 7 index it will store the object in 7 buckte as a doubly linked list format.
     Some times we will get same index value suppose 8,that time hash collosion will occur.
     and equal() method get overide to check contain equal or not if contain is equal doubly linked list get overide,if contains is not equal
     then another doubly linked list will get create connected to previous one.
     Suppose we are passing null values it will store on zeorth index. If you passing lot's of null keys it will started replacing .
      
      
49) When do we use HashSet over TreeSet?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Hashset is used when we want to search element and we don't want any sorting order. whereas
   Treeset is used when we want sorting element ,fast insertion and retrieving the element.
   
50) What is Linked HashSet and its features?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Linked hashset implements set interface. Linked hashset similar to the hashset. the main difference that linked hashset maintain insertion order whereas
 hashset doesn't maintain insertion order.
 
51) What is linked hashmap and its features?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Linked hashmap maintain insertion order. Linked hashmap is faster for insertion and deletion the element.
 
52) What is SortedMap interface? /////////////////////////////////////////////
 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SortedMap interface maintaing sorting order of keys,by default sortedmap interface natural order.
 
53) What is Hashtable and explain features of Hashtable?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hashtable is synchronized and thread safe. Hashtable extends Dictionary class.Hashtable doesn't allow null value as well as keys.Hashtable is thread safe.
 Hashtable is legacy.
 
54) Difference between HashMap and Hashtable?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                      HashMap                                            Hashtable
	1) Hashmap is non synchronized                   1) Hashtable is synchronized
	2) Hashmap is thread safe                        2) Hashtable is non thread safe.
	3) Hashmap allows n number                       3) Hashtable doesn't allow null values or keys. 
	   null values and only one null keys
        4) Hashmap is non legacy                         4) Hashtable is legacy.
	   
55) What is concurrent hashmap and its features ?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Concurrent hashmap similar to the hashtable and synchronized version of hashmap. It doesn't allows null value and keys.concurrent hashmap allows multiple thread
to access.
Cocurrent hashmap is thread safe. i.e multiple thread can operate single object without any issues.
Peformancewise concurrent hashmap is better than the hashmap.
The default concurrent hashmap size is 16, load factor is 0.75.
ConcurrentHashMap<K,V> map=new ConcurrentHashMap<k,V>(DEFINE_SIZE_ALSO_HERE);

56) Difference between concurrent hashmap and hashtable?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
concurrent hashamap allows mutiple thread access whereas hashtable doesn't allow multiple thread access.

57) Explain about fail safe iterators in java? //////////////////////////////////////////
---------------------------------------------------------------------------------------------------------------------------------------------------------------------Fail safe iterator means it doesn't throw concurrentMoficationException. when thread was iterating it doesn't modify the original list it create copy of that
list. 

58) Explain about concurrentModificationException?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
If you  are removing element from enhanced for loop by using remove method so you will get concurrentModification Exception.
ConcurrentModifcation exception means it doesn't require any extra space in a memory.

// If you are using arraylist and tryig to peform add, remove operations under the lying of any method 
    we will get concurrent modification exception.
    To avoid that we need to use Iterator.
for eg- 
If you are using arraylist and try to remove object from enhanced for loop or while direclty by 
remove() method it will throw concurrentModification Exception.
To avoid this problem we need to use Iterator

59) When we get the concurrentModifcationException?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
If you are removing element from enhanced for loop by using remove method. We will get concurrentModificationException.
To avoid this we need to use Iterator.

 ---------------------------------------------------------------------------------------------------------------------------------------
 60) Difference between concurrent hashmap and synchronized hashmap?
                                 concurrent hashmap                               synchronized hashmap
			   1) concurrent hashmap don't allow null           1) synchrnized hashmap allows null keys(one) and values.
		              values as well as keys
                           2)  If you want to concurrent hashmap            2) In synchronized hashmap use collections.sychronizedMap() we need to use
		              we have direclty class in java                    
		           3) accesibility more efficient                   3) In accesibility less efficient
 

---------------------------------------------------------------------------------------------------------------------------------------
61) Remove method works for arraylist and hashset?

arraylist remove element by it's index where hashset remove direclty object.

1) arraylist
[1,2,3,4,5,6,7]
list.remove(4);
output=> [1,2,3,4,6,7];

2)hashset
[1,2,3,4,5,6,7]
list.remove(4);
output=> [1,2,3,5,6,7];

62) What does mean by asList() method?
---------------------------------------------------------------------------------------------------------------------------------------
asList() method means size of array become fixed.

63) What means by load factor?
---------------------------------------------------------------------------------------------------------------------------------------
Load factor is decided when to increase the size of list.

64) How can you make hashmap synchronized?
---------------------------------------------------------------------------------------------------------------------------------------
By using collections.synchnronizedmap() used to make hashmap synchronized.

65) Who is faster hashmap or hastable?
---------------------------------------------------------------------------------------------------------------------------------------
Hashmap is non sychronized and non thread safe i.e hashmap is faster than the hashtable also hashmap 
require less memory.

*** Remainder always non synchronized thread is faster than the synchronized thread.

66) Can we take custom class object as key in hashmap?
---------------------------------------------------------------------------------------------------------------------------------------
Yes we can take custom class object as a key in hashmap.
But we know that collections only support the objects, wrapper classes and
all wrapper classes are immutable in java.
We need to make it immutable.
We need to override the equals and hashcode() method of object class.

67) What is the use of Concurrrent HashMap?
---------------------------------------------------------------------------------------------------------------------------------------
It allows to access multiple thread at a time.

68) Scenario's if we pass custom class object as key.
---------------------------------------------------------------------------------------------------------------------------------------
Scenarios 1) Suppose if we are passing custom class object as key first we need to make it as immtable.
          2) Because collection support only objects not a primitive data type.
	  3) All wrapper class are immutble.
	  4) To make custom class as object first we need to make them immutable by using or
	      overding hashcode and equal method.
	  5) Where we can specifiy the the key.
	  
69) Practial scenarioes when to use HashMap vs concurrent HashMap?
---------------------------------------------------------------------------------------------------------------------------------------
1) HashMap is thread safe, means only one thread access at a time. So basically in single thread enviroment
   will use HashMap.
   If you put it into multithreaded enviornment it give us bad result or correct result.
   It's give better and faster performance as compate to hashmap.

2) Cocurrent hashmap is not thread safe. so multiple thread can access at a time.Basically in multithreaded environment
  will use concurrent hashmap.





 ==================================================================================================================================================================
 ================================================================================================================================================================== 
 RESTFul web services.
 1) Web services designed for application to application interaction
 2) Interpolations - suppose Application A installed in java , application B installed on dotNet and application c installed on php so they can communicate 
                     with each other with the help of web services
 3) It allows communicate over the network.		     
 ==================================================================================================================================================================
 ==================================================================================================================================================================
 
 1) REST-
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Rest stands for Representational state transfer. It developed by roy fielding to make web services most effective.
 { Roy fileding also develops the Http protocol ) Hyper text tranfer protocol.
 
 
 It developed four methods.
 
 A) POST-
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
    Post is used to create a new resource.
    
 B) Put-
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
    Put is used to update the existing resoure.
    
 C) GET-
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
    Get is used to get the resource (or read the resource).
    
 D) DELETE-
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
   DELETE is used to delete the resource.
   
   
 Status code
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1)200
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ok -succesful
 
 2)201
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 created
 
 3) 400
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Method not found
  
 4) 404
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Bad request
  
 5) 500
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Internal server error
 
 3)What is web service and why it required?
------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Web services is desined for application to application interaction.
  Interoperable. suppose application A installed on java, application B installed on dotnet and application c build on php so they communicate over the webservies.
  It allows communicate over the network
 
 
  4) What is the difference between REST and SOAP?
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
                               SOAP                                         REST
               1) SOAP stands for simple object        1) REST stands for representational state transfer.
                  access protocol.  
               2) SOAP manily uses                      2) REST used json for data exachnage
                  xml for dataexachanges
               3) SOAP is protocol.                    3) REST is an architecrure approch.
               4) SOAP are difficult to                4) REST is easy to implement as compare to SOAP.
                 implements 
                 

 5) What is differecne between put and patch?
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Put used when we want to update the complete resource. but 
 suppose if you have 50 of attribute and you want to change onlt one or two value of 
 them we will go for patch.

======================================================================================================================================================================
======================================================================================================================================================================
                                                                     !!! Shree Swami Samrath !!!
======================================================================================================================================================================
======================================================================================================================================================================


======================================================================================================================================================================                                                                           JAVA 1.8 Features 
======================================================================================================================================================================

The main objective of java 1.8 introduce is to enable function programming in java.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Lambda Expression 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Lambda expression is used to provide the implementations of functional interface. It is function so .class file will not get created. It is anonymous function. It is used to iterate the collection , filter and extraction purpose.
   { anonymous means it doesn't have any return type, method name and modifier also }.
   Lambda expression only applicable for function interface.
   Types of lambda expression such as
   1)No argument lambda expression 
   ()->{}
   () Argument list - May or may not be empty
    -> arrow token  -It is used to connect argument list to the expression body.
   {} body     - It contaions expression and syntax
   2) Single Parameter lambda exxpression
   (e)->{}
   3) Two Parameter lambda expression
   (e1,e2)->{}


    for eg -
     1) In previously { Object oriented Programming Language}
        
	public void getInfo(){
        System.out.println("Hello");
	}
	
	Now Lambda expression is anonymous function means it doesn't have any name, return type and modifier also.
	{ Functional Programming }
	()-> {
	System.out.println("Hello");
	}
	

    2) 
       public void add(int a,int b){
       System.out.println(a+b);
       }
       
       (int a,int b)-> System.out.println(a+b);
	
	
	
     3) 
      public int getSquare(int num){
          return num*num;
      }
	
	
	
      (int num)-> {return num*num;}
      (int num)-> num*num;
      (num) -> num*num;
       num -> num*num;
	
      num-> { return num*num;}
     /// Without curly braces we can't use return statement.
	  
	  
    4) public String getLength(String name){
         System.out.println(name.length());
       }
        
	name-> System.out.println(name.length());
	
	


   Main advantage also
   1) If you are using one paramaeterized lambda expression then parenthis are optional
   2) If you are using one statement in method body then curly brases are optional
	
	

   // If You want to use or call Lambda expression then function interface must be required.
	
   
   Advantages
   1)Reduce boiler plate code.
   2) Code lot's of lines of code
   3) Enable Function Programming in java.
   
    
    

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
2) Stream API
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Stream API used to flow element from source to the destination.Stream API doesn't used to store the element.It takes input from collection and element visited only    once in thier life.It used to modify the resource.
   There are two types of Stream API
   1) Parallel Stream API
    Parallel Stream API means we can perform multiple operations at a time. It is platform dependent. The performs of parallel Stream API is faster than the 
    sequential Stream API. It doesn't maintain the order.( This probelm occur if you are using forEach() To overcome this problem we need to forEachOrdered() loop)
    
   2) Sequential Stream API
      Sequential Stream API is used to perform only one operations at a time. It is platform independent. The performs of sequential stream API is slower than the 
      parallel stream API. It maintain the order.
      
   The methods of stream such as
   map(),filter(),disctint(),toarray(),collect(),max(),min(),findfirst(),findAny(),forEach(),limit()
      
   class OddNum{
   public static void main(String args[]){
   List<Integer> list=new ArrayList<Integer>();
   list.add(10);
   list.add(30);
   list.add(35);
   list.add(45);
   list.add(36);
   list.add(29);
   List<Integer> oddNum=list.stream().filter((e)-> e%2!=0).collect(Collectors.toList());
   System.out.println(" Odd Number in the present list is :: "+oddNum);
      }
   }
   
   Advantages of streamAPI- 1) It reduce lot's of lines of codes.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
3) Default and Static Method 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Default and Static method introduced in an interface in java 1.8. In java 1.7 we have only method declaration inside an interface and if you want to declare any      method inside an interface it must implement in subclass so number of lines of code are unneccesarly increases. 
   In java 1.8 we have both method declaration and method defination inside an interface.so which class want to access
   that default method they can call such as interface.super.method() name.

   Interface Bike{
   void  start();
   public default void run(){
   System.out.println("running....");
      }
   public static void stop(){
   System.out.println("stopped!!!");
     }
   }
   class Honda implements Bike{
   public void start(){
   System.out.println("Started");
   Bike.super.run();
     }
   }
   class Test{
   public static void main(String args[]){
   Honda honda=new Honda();
   honda.start();
   Bike.stop();
     }
   }

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
4) Functional Interface or SAM
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Functional interface means it has only one abstract method.In java 1.8 one annotation also added @FunctionInterface.
   (This annotations helps us to write interface as per the rules).
   It is also called as SAM i.e single abstarct method.
  
  if you add this annotation above the interface you are not able to add any other method inside an interface if you try to add it will show compile time error.
   But we can add n number of  default and static inside the functional Interface also.
 
  If you add default method it call by Interface.super.method() name
   whereas Static method called Interface.methodName() 
 
 In functional Interface we have only one abstract method but we have mutiple default methodand static method.
 
 1)
       @FunctionInterface // It is optional...... if you want you can use. It helps us to write method inside the function interface as per rule.
      
      interface Greet{
       public void m1();
       public static void greeting(){
       System.out.println("Welcome");
       }
       
       default void info(){
        System.out.println("Go Ahead");
	}
       }
       
       
2) 
      @FunctionInterface
     interface Greet {
       //public void m1();
       public static void greeting(){
       System.out.println("Welcome");
       }
       
       default void info(){
        System.out.println("Go Ahead");
          }
      }
       
 
    It will show compile time error because function interface means it has one abstract method.
    
   
   
3)  We can extends Functional Interface but it has only one abstract method.
 A) Correct
 @FunctionInterface
 interface Arithmetic{
  void add(int a,int b):
 }
 
 @FunctionInterface
 interface Addition extends Arithmetic{
   void add(int a,int b);
 }
 
 
 B) False
 @FunctionInterface
 interface Airthemtic{
  void add(int a,int b);
 }

@FunctionInterface
 interface Addition extends Airthmetic{
  void sub(int a,int b);
 }
	

c) Correct

 @FunctionInterface
 interface Airthmetic{
 void add(int a,int b);
 }
 
 interface Addition extends Airthmetic{
  void sub(int a,int b);
 }
 


----------------------------------------------------------------------------------------------------------------------------------------------------------------------
5) For Each Method
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   For Each Method is used to iterate the element.
   For Each Method is introduced in iterable and stream Interface. 
   It is used to iterate the array and collections.
   The main advantage of for each loop is to reduce lot's lines of code.
   The disadvantage of this loop is we can't travel in reverse direction.
   
   class{
   public static void main(String args[]){
   List<String> list=new ArrayList<String>();
   list.add("Harsh");
   list.add("Patil");
   list.add("Vaish");
   list.add("Taral");
   list.add("Shreya");
   list.add("Shradha");
   list.add("Shruti");
   System.out.println("Names present in the list");
   list.forEach(System.out.println);
      }
   }

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
6) Method Reference ///////////////////////////////////
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Method reference is compact and easy form of lambda expression. Method reference is used to reference method of fuctional Interface.
   Types of Method Reference
   1) Reference to the static method 
   2) Reference to the instance method 
   3) Referecne to the constructor

   Interface Bike{
   void run();
   }
   class Honda {
   public static void run(){
   System.out.println("Running");
     }
   }
   class Test{
   public static void main(String args[]){
   Bike bike=Honda::run;
   bike.run();
     }
   }
   
   
   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
7) Optional Class
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
In java 1.8 Optional class is defined to handel the nullpointer exception. It is final class.
The method present in optinal class is isPresent() ,get(), orElse()

for.eg you fetch the data from database by using id,name and the id or name is not present in the database then they will show null pointer exception.
======================================================================================================================================================================
1) get employee list whose salary is greater than 2000 and department wise using java-8 

public class Interview {

	private int id;

	private String name;

	private double salary;

	public Interview() {
		super();
		// TODO Auto-generated constructor stub
	}

	public Interview(int id, String name, double salary) {
		super();
		this.id = id;
		this.name = name;
		this.salary = salary;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public double getSalary() {
		return salary;
	}

	public void setSalary(double salary) {
		this.salary = salary;
	}

	@Override
	public String toString() {
		return "Interview [id=" + id + ", name=" + name + ", salary=" + salary + "]";
	}

	public static void main(String[] args) {

		List<Interview> list = Arrays.asList(new Interview(101, "Sham", 2000), new Interview(102, "Ram", 3000),
				new Interview(103, "Jay", 4000), new Interview(104, "Vijay", 5000), new Interview(104, "Sharad", 500));

		List<Interview> eligibleList = list.stream().filter((e) -> e.getSalary() > 2000).map((e) -> e)
				.collect(Collectors.toList());

		System.out.println(eligibleList);

	}
}                 
                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
8) Map  ////////////////////////////////////
--------------------------------------------------------------------------------------------------------------------------------------------------------------------      Map is used to perfrom the intermediate operations.It doesn't produce end result, it return the stream.
     for eg- convert string to lower case to upper case, multiply number by values etc.
     
     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
9) Predicate 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------    Predicate is function interface, return type of predicate is boolean. It return true or false value


-------------------------------------------------------------------------------------------------------------------------------------------------------------------
10) Stream 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------    Stream means element flows from source to the desitinations. It doesn't used to store the element, It takes input from the collections.It mainly used to modify
   the resources.

11) What are method present in the optional class? ///////////////////////////////////
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) isPresent()  -------      return type boolean 
2) get()         
3) orElse       -------      It return if present otherwise it return another.


12) What is method present in StreamAPI?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) collect
2) count()
3) disctint()
4) filter()
5) forEach
6) limit()
7)min()
8) max()
9) reduce()
10) sorted()

13) Describe the newly added features in Java 8?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Lambda expression
2) StreamAPI
3) default and static method
4) Method Reference
5) For each method
6) Functional Interface
7) Optional class


14) In StreamAPI what is the difference between parallel and sequential stream?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  Sequential Stream API-
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------
  Sequetial Stream API means we can perform only one iterator or operations at a time. It maintain the order. The perfoms sequential
  stream API is slower than the parallel stream API. platforn independent.
  
  Parallel Stream API-
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------
  Paralllel Stream API means we can perform multiple operations at a same time. The doesn't maintain the order. The performs od parallel stream API
  is faster than the sequential Stream API. platform dependent.
  
 15) What are the advantages of java 1.8?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) It reduce lots of lines of code
2) Increase productivity
3) Enable FUnction programming in java

16) What are the advantages of java 11?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) .class file will not get create
2) We don't need to compile your application.
3) We have private method inside an interface.

 17) Can a functional interface extend/inherit another interface?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Yes, Funtion interface extends another interface but only when it doesn't have any abstract methods.
 
 18) What are pre-defined function interfaces in java?
----------------------------------------------------------------------------------------------------------------------------------------------------------------- 
1) Runnable 
2) consumer
3) predicate
4) Function 
5) Supplier

19)  What are the various categories of pre-defined function interfaces?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Funtion-  It takes arguments and return the result
2) Consumer- It passes the arguments but not return the values
3) Supplier- no arguments but return result{get method}
4) Predicate- It return true or false value ( boolean return type)

20) How does a lambda expression relate to a functional interface?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Lambda expression is used to represnt the instance of functional interface.

21) What is the basic structure/syntax of a lambda expression?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
()-> { }
()- argument list- may or may not be empty
-> arrow token - used to connect argument list to method body
{} method body - contains expression and syntax.

22) What are the avantages of lambda expression?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) To provide the implementations of functional interface
2) Reduce lot's of lines of code

23) What are the types and common ways to use lambda expressions?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) No parameter lambda expression
() -> {
        }
	
2) One Parameter lambda expression
(e1) -> {
           }
	   
3) Two Parameter lambda expression
(e1,e2) -> {
                 }

24) What does the String::ValueOf expression mean?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
ValueOf() method convert the data into human readable format. String Valueof() method return the represenatios of values.

25) What are the main componets of stream?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Jobs, tupple, operators,data stream.

26) What are Intermediate and Terminal operations?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Intermediate operations doesn't produce the end result, it return the Stream.Intermediate operator are lazy loading. 
   intermediate operations methods such as map(),filter(),distinct(),skip()
2) Terminal operations produce the end result and it doesn't return the stream. Terminal operator are eargely loading.
   Terminal operations methods such as toarray(),count(),collect(),forEach(),findFirst(),findAny()

27) What are the most commonly used Intermediate operations?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
map() ,filter(),sorted(),disctint(),limit()

28) What is the stateful intermediate operation? Give some examples of stateful intermediate operations?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
stateful means it internally contains state
The stateful intermediate operations such as 
1) disctint() ,skip(),sort(),limit()
all other are stateless such as
map(),filter()

29) What is the most common type of Terminal operations?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
The most common terminal operations such as
1) collect() 2) reduce()  3) findfirst() 4)findAny() 5) forEach() 6) toArray() 

30) What is the difference between find first and find any?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
findFirst() method return first element of the stream wheras findAny() method return any element of stream

31) How are Collections different from Stream?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Stream doesn't used to store the elements. It is used to modify the resource.
Collections is used to store the elements.

32) What is the feature of the new Date and Time API in Java 8?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
old date time API is not thread safe, we can do less operations.

33) Explain with example, LocalDate, LocalTime, and LocalDateTime APIs?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
LocalDate means localdate with time zone.
LocalTime means without any date 
LocalDateTime - it represent date with time

33) Characterstics of Lambda Expressions?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) If you are using one parameter then theres is no need to use the parenthesis. But if your are using more parameter then you need to use the parenthisis
2) If there is one statement in method body then there is no need to curly braces.

34) What is the difference betweeen StreamAPI and CollectionAPI? /////////////////////////////////////////
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 StreamAPI- StreamAPI doesn't use iterator and spiltiterator. It is used to modify the resource.
 CollectionAPI- CollectionAPI use iterator and spiltiterator to perform action on each element. It is used to store the data.
 
35) How can you create function interface?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Create a interface and define only one abstarct method.(abstract means it doesn't have body). Use the annotations such as
@FunctionalInterface. You can write mulitple default and static methods.

36) What is SAM?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  SAM stands for single abstract method. Functional Interface is also known as SAM.
  
37) What is a Predicate? State the difference between a Predicate and a Function?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Predicate and function both are the predifined function in interface.
2) Predicate return type is boolean i.e it return only true or flase values
wherase function takes the arguments and return the result. Return type of function is object.

38) What is diffrence between limit and skip?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
limit means it return the specified size, whereas skip means skip the element

39) What is the difference between iterator and spiltiterator? //////////////////////////////////////////////////
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Iterator -
1) Iterator is used in Collection API 
2) Iterator iterate only sequential order
3) Iterator method such as
   next() and hasNext() 
   
SpiltIterator- 
1)spiltIterator is used in streamAPI
2)spiltIterator travels both parallel and sequential order
3)It has spiltiterator() method.

40) What is the consumer functional Interface?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
consumer function interface is pre-defined function in java. It takes the arguments but doesn't return the values.

41) What is supplier functional interface?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Supplier function interface means it doesn't take the inputs.It return values by using get method .

42) What is the difference between java 1.8 internal and external iterations?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Internal iterations supports functional programming.whereas external Iterations supports oops programming styles.

43) What is the advantage of java 1.8?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
We require less code to write.
Enable Function Programming.

44) What is the main objective to introduce Java 1.8?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
The main objective of Java 1.8 is enable function programming, so require to write lesser code.


45) What are the different Functional Interface in Java (SAM)?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Runnable  ( run() method)
2) Consumer
3) Predicate
4) Supplier
5) Function

/////////////////
Marker interface
1) Remote interface
2) Clonable interface
3) Serialliable
  
 46) Comparision concepets
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (obj1,obj2) 
 +ve when obj1 is come before obj2
 -ve when obj1 is come after obj2
 0 when obj1 and obj2 are equal.
 
 47) What 1.8 Hashmap changes?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
They remove linked list and added binary tree

 48) What are the in-built functional interfaces in Java?
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------
 1) Function Interface - It take the input and return the result as object
 2) Consumer Interface - It take the input but doesn't return anything.
 3) Supplier interface- It take the doesn't take the input but return the result ( get method )
 4) Predicate Interface - Predicate return type is boolean . It return true or false values.
 
 49) Can we resuse the stream?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
No , we can't reuse the stream. Because element visited only once in their life.

50) Why forEach() if we have for() already?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Because forEach() easy to use & redable.
Where to use for loop we need to write the three steps such as
1) define iterator for eg- int i=0;
2) Define end point for eg i<array.length
3) define how should the loop is iterate i++

51) What are the methods of stream?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Max
2) Min
3) ForEach
4) Filter
5) Map
6) Reduce
7) limit 
8) Sorted
9) Collectors

While Iterating the Stream it doesn't modify the original list it create the copy of list.


52) Related to Lists
----------------------------------------------------------------------------------------------------------------------------------------
List<String> lists=new ArrayList<>():

A) lists.size() = 0
B) lists!=null
C) lists.isEmpty ==true

53) What is Thread safe and non thread safe.
----------------------------------------------------------------------------------------------------------------------------------------
i)  If any data structuture is thread safe , so we don't need to worry or we don't need to do anyhting if multiple thread is going to
    access it.
ii) If any data strucutre is non thread safe, and multiple thread is going to access it , you need provide to synchrozition in this 
    case otherwise you will get inconstistent result or chances of data corruption.




 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------   
JAVA 1.9 Feature  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) .class file will not get created.
2) inside the interface we can write private method also.


 47) What is data structure
 
 48) What is the difference between collection and data structure?
