------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                       !!! Shree Swami Samarth !!!
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1) What is desing pattern?
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Desing pattern is predefined solutions for specific tasks or problems.
A) Core Java Desing pattern B) Java EE Desing pattern

A) Core Java Desing pattern

B) Java EE Desing Pattern



2) What is Factory Desing pattern? What is the purpose of it  and How can we implements? What kind of practical scenarios we have to implement it?
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Factory desing pattern -


1) Suppose you have single interface which implements in multiple classes that time to avoid
creating of lot's of instantions we can use factory desing pattern.
What will do will make one abstract class , those implemnt the interface, and will create the
class which extends the abstract class to use method of abstract class.

/******** Interface **********/
Interface A{
public void processInput(Input input);
}

/********* Abstract class implements interface ********/

abstract class AC implements A{

@Overide
public void processInput(Input input){

}

}

/******** Class extends Abstract class ******/

class NewInputProcessor extends classAC{


}


3) Have you implemented singletion desing pattern in your project and what is the use for it?
_____________________________________________________________________________________________________________________________________
1) yes we have implemented singelton desing pattern in our project.
2) what we doing we want only one value for pagination , it will pick value from properties file and generate one value.
   we want to generate this value only once and only once time that object of class is get created. 
   what we did we make constructor private and static , created static variable of class.
   we arre checking if class object is created or not , if not we will created , so after that it not going to create
   new object.

for eg

public class TransactionSizeLimitService extends AbstractTransactionSizeLimitService{

    private static  TransactionSizeLimitService transactionSizeLimitService=null;

    private static TransactionSizeLimitService getInstance(){
         if(transactionSizeLimitService==null){
            transactionSizeLimitService=new   TransactionSizeLimitService();
           }
        return transactionSizeLimitService;
     }

   public void generateSendNotificationPerPageBasedOnPaginationFactor(){

 
   }
}



public abstract class AbstractTransactionSizeLimitService{

}

public class GenerateNotificationServiceImpl{

   TransactionSizeLimitService transactionSizeLimitService=null;
   transactionSizeLimitService =getInstance();
   transactionSizeLimitService.generateSendNotificationPerPageBasedOnPaginationFactor();
}

so basically only one object get created first time , when costructor get called, after that the object we will
use until the life cycle of our application , so it won't create new object.
Saves memorry , advantage.



2) Have you implemented factory desing pattern in your application ? what is the use for that ? 
_________________________________________________________________________________________________________________________
Yes, we have implemented factory desing pattern in our application.
so basically we use to reduce the number of instantions. we used.
what we did create one a interface added or declared method inside it.
create one abstract class and implemented interface that.
Cretead required number of classes and extendds them with abstract class.

So what we can do we will put common method under the abstract class.
so rest of all class will use it.
