------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                         !!! Shree Swami Samarth !!!
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1) What is desing pattern?
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Desing pattern is predefined solutions for specific tasks or problems.
A) Core Java Desing pattern B) Java EE Desing pattern

A) Core Java Desing pattern

B) Java EE Desing Pattern

1) Factory desing pattern 
------------------------------------------------------------------------------------------------------------------------------------------
i) factory desing pattern getting used to reduce the number of interfaces and object creation.
ii) so basically we will one one interface and there are multiple classes will implement it.
iii) for eg - interface animal , class Dog implements animal , class Cat implements animal.
iv) based on the instance it will automatically pick or class the services.

interface Animal{
       void makeNoise();
}

class Dog Implements Animal{

@override
public void mainNoise(){
}

class Animal implements Animal {

@override
public void makeNoise(){

}
}

class Test {

public void lookAtTheNoise(Animal instance){

Animal a = instance.MakeNoise()

}
}



2) Singleton desing pattern.
------------------------------------------------------------------------------------------------------------------------------------------
i) singleton desing pattern is getting used to restrict the user from creating a instance of class.
ii) The only one instance of class is created.
iii) to implement singleton desing pattern create a private constuctor of a class. don't use setter method.
     To use the instance of class make static method. the first time the instance will get intialized and rest all time
     use can use it.

final class College{

private College college=null;

private College(){

}

public static College getInstance(){
     if(college==null){
         college=new College();
      }
    return college;
}
//use getter method don't use setter

}


